<?xml version='1.0' encoding="utf-8"?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
   "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd"  [ ]>

<chapter id="jhu784-course-description">
    <title>Course Description</title>

    <section id="jhu784-meeting">
        <title>Meeting Times/Location</title>
        <itemizedlist spacing="compact">
            <listitem><para>Wednesdays, 4:30-7:10pm</para></listitem>
            <listitem><para>APL, TBD</para></listitem>
        </itemizedlist>
    </section>

    <section id="jhu784-description">
        <title>Description</title>
        <para>
            This comprehensive course explores a variety of modern Java 
            frameworks and technologies that can be used for developing mission-critical 
            complex enterprise applications. The emphasis is on use of the latest Java EE platform, 
            its set of underlying specifications, designing and developing server-side application components.                         
            Students will learn thru having hands-on experience in building multi-tier distributed 
            enterprise applications, comparing and using variety of Java EE design patterns, 
            rich set of server-side components and technologies, and web-enabled by modern design 
            practices and communication protocols.

            Students will learn to:
       </para>
        <itemizedlist spacing="compact">
            <listitem><para>
            Implement a data access tier to a relational database using Java Persistence API (JPA) 
            and variety of data modeling and access patterns.</para></listitem>

            <listitem><para>
            Implement synchronous and asynchronous server-side business logic using stateless and stateful session EJBs, 
            message-driven EJBs and the EJB Timer service.</para></listitem>
            
            <listitem><para>
            Integrate server-side logic with the web-tier components using legacy server-side and more 
            modern RESTful API approaches that include JSON and XML.
            </para></listitem>
        </itemizedlist>
       
       <para>
            Other critical Java SE/EE infrastructure services will be discussed, including the Java Database Connectivity (JDBC) API,
            Java Naming and Directory Interface (JNDI), the Java Message Service (JMS), the Java Transaction (JTA) API, 
            and Java EE security.

            Using modern development tools, commercial persistence providers, and application servers, students will 
            design and implement several significant programming projects using the above-mentioned technologies and 
            deploy them to a Java EE environment that they will manage.        
        </para>

        <para>
            The course is being actively updated to JavaEE 8 (JPA 2.2, EJB 3.2, JAX-RS 2.1, and JMS 2.0) and JDK 11
            but a few order APIs and legacy examples remain for demonstration purposes. The development environment 
            used in class is based on the Wildfly application server and is JDK 11 and JavaEE 8-compliant.
        </para>
    </section>

    <section id="jhu784-student-background">
        <title>Student Background</title>
        <itemizedlist spacing="compact">
            <listitem><para>Prerequisite: 605.481 Distributed Development on the World Wide Web or equivalent</para></listitem>
            <listitem><para>Strong Java programming skills are assumed.</para></listitem>
        </itemizedlist>
    </section>

    <section id="jhu784-student-commitment">
        <title>Student Commitment</title>
        <itemizedlist spacing="compact">
            <listitem><para>Students should be prepared to spend between 10-16 hours a week outside of class.
            Time spent can be made efficient by proactively keeping up with class topics and actively 
            collaborating with the instructor and other students in the course.</para></listitem>
        </itemizedlist>
    </section>

    <section id="jhu784-texts-optional">
        <title>Course Text(s)</title>
        <para>The course uses no mandatory texts. The course examples and notes for this course and free Internet resources are plentiful.</para>
    </section>
        
    <section id="jhu784-required-software">
        <title>Required Software</title>
        <para>
            This course will make heavy use of development tools
            (JDK 11, Git, Maven 3, JUnit, SLF/Log4j, and Eclipse), a database 
            (H2 Database Engine), JPA persistence provider
            (Hibernate), and application server (JBoss/Wildfly 17). 
            Students are required to establish a local
            development environment. Detailed instructions for setup are
            part of the first exercise (Development Environment Setup).
        </para>
    </section>
    
    <section id="jhu784-references">
        <title>References</title>
        <para>
            Documentation will be provided through course slides, examples, 
            and tutorials.  Each lecture will supply a 
            list of links for that technical area.            
        </para>
    </section>

    <section id="jhu784-grading">
        <title>Grading</title>
        <para></para>
        
        <itemizedlist spacing="compact">            
            <listitem>
                <para>
                    100 &gt;= A &gt;= 90 &gt; B &gt;= 80 &gt; C &gt;= 70 &gt; F
                </para>
            </listitem>
        </itemizedlist>
        
        <table>
            <title/>
            <tgroup cols='2' align='left' colsep='1' rowsep='0'>
            <colspec colname="col1"/>
            <colspec colname="col2"/>
            <thead>
                <row>
                  <entry>Assessment</entry>
                  <entry>% of Semester Grade</entry>
                </row>
            </thead>
            <tbody>
                <row rowsep="1">
                  <entry namest="col1">Class/Newsgroup Participation</entry>
                  <entry namest="col2">10%</entry>
                </row>
                <row rowsep="1">
                  <entry namest="col1">Project Startup/Sanity Check</entry>
                  <entry namest="col2">5%</entry>
                </row>
                <row rowsep="1">
                  <entry namest="col1">Project 1</entry>
                  <entry namest="col2">30%</entry>
                </row>
                <row rowsep="1">
                  <entry namest="col1">Project 2</entry>
                  <entry namest="col2">30%</entry>
                </row>
                <row rowsep="1">
                  <entry namest="col1">Project 3</entry>
                  <entry namest="col2">25%</entry>
                </row>
            </tbody>
            </tgroup>
        </table>    
        <itemizedlist spacing="compact">            
            <listitem>
                <para>
                    Projects will be done individually and graded 100 though 0 based
                    on posted project grading criteria.
                </para>
            </listitem>
            <listitem>
                <para>
                    Class/newsgroup participation will be based on instructor 
                    judgment whether the student has made a contribution to class
                    to either the classroom or newsgroup on a consistent weekly basis.
                    A newsgroup contribution may be a well-formed technical observation/lesson 
                    learned, a well formed question that leads to a well formed follow up from 
                    another student, or a well formed answer/follow-up to another student's 
                    question. Well formed submissions are those that clearly summarize the 
                    topic in the subject, and clearly describe the objective, environment, 
                    and conditions in the body. The instructor will be the judge of whether 
                    a newsgroup contribution meets the minimum requirements for the week. 
                    The intent of this requirment is to promote public collaboration 
                    between class members.
                    </para>
            </listitem>
            <listitem>
                <para>
                    There will be one required "project startup/sanity check" submission
                    and will be primarily graded on a done/not-done basis.
                    The intent of this requirement is to promote early, more-focused
                    productivity and exchange of artifacts between the 
                    student and instructor. 
                </para>
            </listitem>
        </itemizedlist>
    </section>
    
    <section id="jhu784-grading-policy">
        <title>Grading Policy</title>
        <itemizedlist spacing="compact">
            <listitem>
                <para>
                    Late projects will be deducted 10pts/week late, starting after the due date/time, 
                    with one exception. A student may submit a single project up to 4 days late without 
                    receiving approval and still receive complete credit. Students taking advantage of 
                    the free first pass should still submit an e-mail to the instructor and grader(s) 
                    notifying them of their intent.
                </para>
            </listitem>
            <listitem>
                <para>
                    Projects must be submitted via e-mail to the
                    instructor and grader(s) with source code in a zip
                    file with a README (links to archives on cloud storage acceptable as well).  
                    All source code must be written
                    to portably compile in the grader's environment
                    using Maven 3. This will be clearly spelled out
                    during the course and you will have plenty of opportinuties 
                    to test the process prior to submitting a project for grade.
                </para>
            </listitem>
            <listitem>
                <para>
                    Class attendance is strongly recommended, but not mandatory. The student is responsible 
                    for obtaining any written or oral information covered during their absence.                
                </para>
            </listitem>
        </itemizedlist>
    </section>
    
    <section id="jhu784-academic-integrity">
        <title>Academic Integrity</title>
        <para>
            Collaboration of ideas and approaches are strongly encouraged. You may use partial 
            solutions provided by others as a part of your project submission. However, the bulk 
            usage of another students implementation or project will result in a 0 for the project. 
            There is a difference between sharing ideas/code snippets and turning in someone 
            else's work as your own. When in doubt, document your sources.
        </para>
        <para>
            Do not host your course project in a *public* Internet repository.
        </para>
    </section>

    <section id="jhu784-instructor-availability">
        <title>Instructor Availability</title>
        <para>
            I am available at least 20min before class, breaks, and most times after class 
            for extra discussion. I provide detailed answers to project and technical questions 
            through the <ulink url="http://groups.yahoo.com/group/ejava_class">course newsgroup</ulink>. 
            You can get individual, non-technical questions 
            answered via <ulink url="mailto:jim.stafford@jhu.edu">e-mail</ulink>. 
            It is very common for me to ask for a copy of your broken project so that I can provide
            more analysis and precise feedback. This is commonly transmitted either as an attachment
            to the e-mail or a link to an archive in GoogleDocs.
            Students needing further assistance are also welcome 
            make other arrangements during the week or schedule a web meeting using <ulink url="https://jhu.zoom.us/">Zoom Conferencing</ulink>.
        </para>
    </section>
</chapter>
  
