<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
   "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd"  [ ]>

<chapter id="esport-project2-testing">
    <title>Project 2 Testing</title>

    <tip>
        <para>
            The end-to-end scenario will test your end-to-end application in a 
            "happy path" scenario. Any white-box or black-box testing of alternate
            and error paths would be appropriate to put in the separate unit and IT tests.
        </para>
    </tip>

    <orderedlist spacing="compact">
        <listitem><para>
            Provide a JUnit integration test that verifies the eLeagueEAR can be deployed
            to the server, including successful deployment of the persistence unit
            and contained EJBs.
            </para> </listitem>
        <listitem><para>
            Provide a JUnit unit test that verifies successul marshaling and demarshaling 
            of an eLeague DTO class using Java Serialization. You may create a DTO class
            specifically for this test if none of your DTOs are used in your RMI interface.
            </para> </listitem>
        <listitem><para>
            Provide a JUnit integration test that verifies a successful JNDI lookup
            and RMI communication with an eLeagueEJB.
            </para> </listitem>
        <listitem><para>
            Provide a JUnit unit test that verifies successul marshaling and demarshaling 
            of an eLeague DTO class to/from XML or JSON.
            </para> </listitem>
        <listitem><para>
            Provide a JUnit integration test that verifies a successful HTTP communication 
            with an eLeagueEJB.
            </para> </listitem>
        <listitem><para>
            Create a single JUnit integration test case (e.g., eSportEndToEndIT) with a single 
            @Test method that walks the two applications through the following end-to-end 
            scenario. You may create a separate IT test in eLeague while developing the eLeague 
            portions but the final end-to-end scenario should be placed in eClub since eClub 
            depends on eLeague.
            </para>
            <orderedlist spacing="compact">
                <listitem><para>
                    Deploy the applications
                    </para> </listitem>
                    <!-- admin1 -->
                <listitem><para>
                    Reset all eLeague tables (using the LeagueTestUtilEJB)
                    </para> </listitem>
                <listitem><para>
                    Populate the eLeague tables (using LeagueTestUtilEJB and the LeagueIngestor)
                    </para> </listitem>
                <listitem><para>
                    Reset all eClub tables (using the ClubTestUtilEJB)
                    </para> </listitem>
                <listitem><para>
                    Populate the eClub tables (using ClubTestUtilEJB) *if* anything necessary
                    </para> </listitem>


                    <!-- lmtucker -->
                <listitem><para>
                    Create a Club in eLeague (using the LeagueMgmtEJB). Assign the club representative
                    to have the login of "user2"
                    </para> </listitem>
                <listitem><para>
                    Add Venue for Club in eLeague (using ClubMgmtEJB)
                    </para> </listitem>


                    <!-- user3 -->
                <listitem><para>
                    Create Parent in eClub (using MemberMgmtEJB). Assign this user login of "user3".
                    </para> </listitem>
                <listitem><para>
                    Create Player in eClub (using MemberMgmtEJB)
                    </para> </listitem>
                <listitem><para>
                    Add a Coach role in eClub (using MemberMgmtEJB)
                    </para> </listitem>

                  <!-- user2 -->
                <listitem><para>
                    Create a Team in eClub (using OrgMgmtEJB)
                    </para> </listitem>
                <listitem><para>
                    Assign Players to a Team in eClub (using OrgMgmtEJB)
                    </para> </listitem>
                <listitem><para>
                    Assign Coach to a Team in eClub (using OrgMgmtEJB)
                    </para> </listitem>
                <listitem><para>
                    Assign Manager to a Team in eClub (using OrgMgmtEJB)
                    </para> </listitem>

                  <!-- user3 -->
                <listitem><para>
                    Show team roster in eClub (using OrgMgmtEJB)
                    </para> </listitem>


                  <!-- user2 -->
                <listitem><para>
                    Add a Team for Club in eLeague (using ClubMgmtEJB)
                    </para> </listitem>
                <listitem><para>
                    Add a contact for a Team eLeague (using ClubMgmtEJB)
                    </para> </listitem>
                <listitem><para>
                    Assign a Team to an existing Division eLeague (using
                    ClubMgmtEJB; division=U13-A, refid="Division-845")
                    </para> </listitem>


                  <!-- lmtucker -->
                <listitem><para>
                    Schedule a Season eLeague (using ContestMgmtEJB)
                    </para> </listitem>

                <listitem><para>
                    Project 3 placeholder
                    </para> </listitem>
                <listitem><para>
                    Project 3 placeholder
                    </para> </listitem>

                  <!-- anonymous -->
                <listitem><para>
                    Show a Team Schedule in eClub (using OrgMgmtEJB)
                    </para> </listitem>


                <listitem><para>
                    Project 3 placeholder
                    </para> </listitem>
                <listitem><para>
                    Project 3 placeholder
                    </para> </listitem>

                  <!-- jtflynn -->
                <listitem><para>
                    Report a Score in eLeague (using ContestMgmtEJB)
                    </para> </listitem>

                  <!-- anonymous -->
                <listitem><para>
                    Show Division Standings in eLeague (using LeagueMgmtEJB)
                    </para> </listitem>
            </orderedlist>

            <note>
              <title>Sport End to End Scenario is demonstrated using single IT @Test</title>
              <para>
                To be clear. The above scenario should be both automated with a
                single JUnit test. Any Web UI actions you implement can augment 
                these actions but not replace them.
              </para>
            </note>

        </listitem>
    </orderedlist>
</chapter>
  
