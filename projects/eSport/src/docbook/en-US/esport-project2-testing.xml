<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
   "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd"  [ ]>

<chapter id="esport-project2-testing">
    <title>Project 2 Testing</title>

    <note>
        <para>
            The end-to-end scenario will test your end-to-end application in a 
            "happy path" scenario. Any white-box or black-box testing of alternate
            and error paths would be appropriate to put in the separate unit and IT tests.
        </para>
    </note>

    <orderedlist spacing="compact">
        <listitem><para>
            Provide JUnit tests that verify the EJB functionality of
            eLeague accessed through its remote interface. This will also test the
            DTOs. These tests should be packaged in the eLeague RMI Test project.
            </para> </listitem>
        <listitem><para>
            Provide JUnit tests that verify the extra business logic
            functionality of eClub interfacing with eLeague. These tests may
            be placed either with the business logic project or where you 
            test the remote interfaces.
            </para> </listitem>
        <listitem><para>
            Provide JUnit tests that verify the EJB functionality of
            eClub accessed through its remote interface. This will also test
            its use of DTOs. Theses tests should be packaged in the eClub
            WAR (or optional RMI Test) project.
            </para> </listitem>
        <listitem><para>
            Perform an end-to-end use case to do the following. This must be 
            demonstrated in an automated JUnit test and then be manually
            implementable using the Web UI.
            </para>
            <orderedlist spacing="compact">
                <listitem><para>
                    Reset all eLeague tables (using the LeagueTestUtilEJB)
                    </para> </listitem>
                <listitem><para>
                    Populate the eLeague tables (using the LeagueIngestor)
                    </para> </listitem>
                <listitem><para>
                    Create a Club in eLeague (using the LeagueMgmtEJB; rep=user2)
                    </para> </listitem>
                <listitem><para>
                    Add Venue for Club in eLeague (using ClubMgmtEJB)
                    </para> </listitem>
                <listitem><para>
                    Create Parent in eClub (using MemberMgmtEJB; loginId=user3)
                    </para> </listitem>
                <listitem><para>
                    Create Player in eClub (using MemberMgmtEJB)
                    </para> </listitem>
                <listitem><para>
                    Add a Coach role in eClub (using MemberMgmtEJB)
                    </para> </listitem>
                <listitem><para>
                    Create a Team in eClub (using OrgMgmtEJB)
                    </para> </listitem>
                <listitem><para>
                    Assign Players to a Team in eClub (using OrgMgmtEJB)
                    </para> </listitem>
                <listitem><para>
                    Assign Coach to a Team in eClub (using OrgMgmtEJB)
                    </para> </listitem>
                <listitem><para>
                    Assign Manager to a Team in eClub (using OrgMgmtEJB)
                    </para> </listitem>
                <listitem><para>
                    Show team roster in eClub (using OrgMgmtEJB)
                    </para> </listitem>
                <listitem><para>
                    Add a Team for Club in eLeague (using ClubMgmtEJB)
                    </para> </listitem>
                <listitem><para>
                    Add a contact for a Team eLeague (using ClubMgmtEJB)
                    </para> </listitem>
                <listitem><para>
                    Assign a Team to an existing Division eLeague (using
                    ClubMgmtEJB; division=U13-A, refid="Division-845")
                    </para> </listitem>
                <listitem><para>
                    Schedule a Season eLeague (using ContestMgmtEJB)
                    </para> </listitem>
                <listitem><para>
                    Show a Team Schedule in eClub (using OrgMgmtEJB)
                    </para> </listitem>
                <listitem><para>
                    Report a Score in eLeague (using ContestMgmtEJB)
                    </para> </listitem>
                <listitem><para>
                    Show Division Standings in eLeague (using LeagueMgmtEJB)
                    </para> </listitem>
            </orderedlist>

            <note>
              <para>
                To be clear. The above scenario should be both automated with a
                single JUnit test and then repeated with interactive Web UI actions. 
                It is suggested that you start by implementing the JUnit version
                first and then begin the Web UI in backwards sequence order (i.e.,
                implement the Web UI for "show Division Standings in eLeague" first),
                using a copy of the full JUnit implementation that you remove one
                step at a time.
              </para>
            </note>

        </listitem>
    </orderedlist>
</chapter>
  
