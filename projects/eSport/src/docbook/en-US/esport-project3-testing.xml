<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
   "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd"  [ ]>

<chapter id="esport-project3-testing">
    <title>Project 3 Testing</title>

    <note>
        <para>
            The end-to-end scenario will test your end-to-end application in a 
            "happy path" scenario. Any white-box or black-box testing of alternate
            and error paths would be appropriate to put in the separate unit and IT tests.
        </para>
    </note>

    <orderedlist spacing="compact">
        <listitem><para>
            Provide JUnit IT tests that verify the EJB functionality of 
            eLeague accessed through its remote interface using new
            access control restrictions.  The test should demonstrate that 
            authentication and access control is in place for this 
            EAR-based deployed application and status is properly conveyed
            to the caller.  For both RMI and JAX-RS, there should be:
            </para> 
            <orderedlist spacing="compact">
                <listitem><para>
                    An example successful call of an access controlled resource
                    using an authorized user properly authenticated
                    </para> </listitem>
                <listitem><para>
                    An example unsuccessful call (using the same call as above) 
                    of an access controlled resource
                    using an unauthorized user
                    </para> </listitem>
                <listitem><para>
                    Proper indication to the caller that the caller was or was 
                    not authorized to make the call (e.g., exception thrown or 
                    status returned)
                    </para> </listitem>
            </orderedlist>
        </listitem>
        <listitem><para>
            Provide JUnit IT tests that verify the EJB functionality of 
            eClub using its new access control restrictions and ability
            to authenticate with eLeague. The test should demonstrate that 
            authentication and access control is in place for this 
            WAR-based deployed application.
            </para> </listitem>
        <listitem><para>
            Provide a JUnit IT tests that demonstrates the functionality of the 
            JavaEE interceptor/validator. This should include:
            </para> 
            <orderedlist spacing="compact">
                <listitem><para>
                    An example successful call using a valid DTO instance successfully
                    validated by the interceptor/validator code.
                    </para> </listitem>
                <listitem><para>
                    An example unsuccessful call (using the same call as above) 
                    using an invalid DTO instance rejected by the interceptor/validator
                    code. Validation must be performed with the Validation API,
                    must be done within an Interceptor, and cannot be performed within
                    the core Java logic within the called EJB.
                    </para> </listitem>
            </orderedlist>
            </listitem>
        <listitem><para>
            Implement the scripted use case below as an automated JUnit test and
            a selected portion manually accessed through the Web UI.
            The JUnit test/module must be delivered in a state that can 
            be executed in a debugger -- whether directly within Eclipse (ideally) 
            or using a remote debugging session to a Maven command-line build.
            </para>
            <para>
              Since this end-to-end test spans both applications the most likely 
              place to host is within eClub.
            </para>
            <orderedlist spacing="compact">
                <listitem><para>
                    The applications deploy and/or started
                    </para> 
                    <itemizedlist>
                      <listitem><para>
                          eLeagueEJB sets a timer for schedule reminders 
                          </para> </listitem>
                      <listitem><para>
                          eClubEJB subscribes to pending contest events.
                          </para> </listitem>
                    </itemizedlist>
                    </listitem>
                <listitem><para>
                    An eleague-admin (admin1) resets all eLeague tables (using the LeagueTestUtilEJB)
                    </para> </listitem>
                <listitem><para>
                    An eleague-admin (admin1) populates the eLeague tables (using the LeagueIngestor)
                    </para> </listitem>
                <listitem><para>
                    An eclub-admin (admin1) resets the eClub tables (using the ClubTestUtilEJB)
                    </para> </listitem>
                <listitem><para>
                    An eclub-admin (admin1) populates the eClub tables (using the ClubTestUtilEJB) if anything necessary.
                    </para> </listitem>
                <listitem><para>
                    The league coordinator(lmtucker) creates a Club in eLeague (using the LeagueMgmtEJB). 
                    League coordinator assigns the club representative (whoever you call them) to 
                    have the login of "user2" to match a login pre-defined in your Wildfly Server.
                    This login has multiple roles assigned spanning both applications.
                    </para> </listitem>
                <listitem><para>
                    The eleague-clubcoord (user2) adds Venue for Club in eLeague (using ClubMgmtEJB). The 
                    "user2" login has been pre-defined to have the role "eclub-coord".
                    </para> </listitem>
                <listitem><para>
                    An eclub-member (user3) creates Parent in eClub (using MemberMgmtEJB). "user3" is a login 
                    pre-defined in your Wildfly Server with the role "eclub-member".
                    </para> </listitem>
                <listitem><para>
                    An eclub-member (user3) creates Player in eClub (using MemberMgmtEJB) for their child
                    </para> </listitem>
                <listitem><para>
                    An eclub-member (user3) adds a Coach role in eClub (using MemberMgmtEJB) to
                    their identity
                    </para> </listitem>
                <listitem><para>
                    The eclub-coord (user2) creates a Team in eClub (using OrgMgmtEJB)
                    </para> </listitem>
                <listitem><para>
                    The eclub-coord(user2) assigns Players to a Team in eClub (using OrgMgmtEJB)
                    </para> </listitem>
                <listitem><para>
                    The eclub-coord(user2) assigns Coach to a Team in eClub (using OrgMgmtEJB)
                    </para> </listitem>
                <listitem><para>
                    The eclub-coord(user2) assigns Manager to a Team in eClub (using OrgMgmtEJB)
                    </para> </listitem>
                <listitem><para>
                    An eclub-member(user3) views their team roster in eClub (using OrgMgmtEJB)
                    </para> </listitem>

                <listitem><para>
                    An eleague-clubcoord (user2) adds a Team for Club in eLeague (using ClubMgmtEJB)
                    </para> </listitem>
                <listitem><para>
                    An eleague-clubcoord (user2) adds a contact for a Team eLeague (using ClubMgmtEJB)
                    </para> </listitem>
                <listitem><para>
                    An eleague-clubcoord (user2) assigns a Team to an existing Division eLeague
                    (using ClubMgmtEJB; division=U13-A, refid="Division-845")
                    </para> </listitem>
                <listitem><para>
                    The eleague-coord (lmtucker) schedules a Season eLeague (using ContestMgmtEJB)
                    </para> </listitem>
                <listitem><para>
                    eLeague (eleague-sys) (thru ContestMgmtEJB) publishes schedule events to Schedule Topic
                    </para> </listitem>
                <listitem><para>
                    eClub (eclub-sys) (using LeagueListenerMDB) receives messages related to unfinished
                    contests. It obtains the e-mail addresses for members associated
                    with the team referenced in the message. It logs the message and
                    e-mail addresses.
                    </para> </listitem>
                <listitem><para>
                    anonymous users views Team Schedule in eClub (using OrgMgmtEJB). eClub (eclub-sys)
                    contacts eLeague (using LeagueMgmtEJB) for team season associated with eClub's team.
                    </para> </listitem>
                <listitem><para>
                    EJB Timer fires a callback in eLeague (using ContestMgmtEJB (eleague-sys))
                    </para> </listitem>
                <listitem><para>
                    eLeague (eleague-sys) (using ContestMgmtEJB) publishes reminder messages 
                    to the Schedule Topic (and received in eClub using LeagueListenerMDB).
                    </para> </listitem>
                <listitem><para>
                    The eleague-coord (jtflynn) (for division=U13-A, refid="Division-845") reports 
                    a Score in eLeague involving our club team (using ContestMgmtEJB)
                    </para> </listitem>
                <listitem><para>
                    anonymous user views Division Standings in eLeague (using LeagueMgmtEJB)
                    </para> </listitem>
            </orderedlist>
        </listitem>
    </orderedlist>
    <figure>
        <title>eSport Full Sequence</title>
        <graphic scalefit="1" fileref="images/esport-full-sequence.jpg"/>
    </figure>
</chapter>
  
