<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
   "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd"  [ ]>

<chapter id="esport-project3-testing">
    <title>Project 3 Testing</title>

    <note>
        <para>
            The end-to-end scenario will test your end-to-end application in a 
            "happy path" scenario. Any white-box or black-box testing of alternate
            and error paths would be appropriate to put in the separate unit and IT tests.
        </para>
    </note>

    <orderedlist spacing="compact">
        <listitem><para>
            Provide JUnit IT tests that verify the EJB functionality of 
            eLeague accessed through its remote interface using new
            access control restrictions.
            </para> </listitem>
        <listitem><para>
            Provide JUnit IT tests that verify the EJB functionality of 
            eClub using its new access control restrictions and ability
            to authenticate with eLeague.
            </para> </listitem>
        <listitem><para>
            Provide a JUnit IT tests that demonstrates the functionality of the 
            JavaEE interceptor/validator.
            </para> </listitem>
        <listitem><para>
            Implement the scripted use case below as an automated JUnit test and
            manually accessed script through the Web UI. All command
            line implementations must be wrapped in an Ant runtime script to
            encapsulate the classpath details in a portable manner (see the
            class jmsNotifier project for an example of using an Ant runtime script).
            The full JSE subscriber need not be part of the automated end-to-end
            JUnit test. The JUnit test/module must be delivered in a state that can 
            be executed in a debugger -- whether directly within Eclipse or using a 
            remote debugging session.
            </para>
            <orderedlist spacing="compact">
                <listitem><para>
                    The applications deploy and/or started
                    </para> 
                    <itemizedlist>
                      <listitem><para>
                          eLeagueEJB sets a timer for schedule reminders 
                          </para> </listitem>
                      <listitem><para>
                          eClubEJB subscribes to pending contest events.
                          </para> </listitem>
                      <listitem><para>
                          The eLeague Java SE LeagueListener subscribes for events
                          related to a specific team.
                          </para> </listitem>
                    </itemizedlist>
                    </listitem>
                <listitem><para>
                    </para> </listitem>
                <listitem><para>
                    admin1 resets all eLeague tables (using the LeagueTestUtilEJB)
                    </para> </listitem>
                <listitem><para>
                    admin1 populates the eLeague tables (using the LeagueIngestor)
                    </para> </listitem>
                <listitem><para>
                    admin1 resets the eClub tables (using the ClubTestUtilEJB)
                    </para> </listitem>
                <listitem><para>
                    admin1 populates the eClub tables (using the ClubTestUtilEJB) if anything necessary.
                    </para> </listitem>
                <listitem><para>
                    user1(lmtucker) creates a Club in eLeague (using the LeagueMgmtEJB; rep=user2)
                    </para> </listitem>
                <listitem><para>
                    user2 adds Venue for Club in eLeague (using ClubMgmtEJB)
                    </para> </listitem>
                <listitem><para>
                    user3 creates Parent in eClub (using MemberMgmtEJB)
                    </para> </listitem>
                <listitem><para>
                    user3 creates Player in eClub (using MemberMgmtEJB) for their child
                    </para> </listitem>
                <listitem><para>
                    user3 adds a Coach role in eClub (using MemberMgmtEJB) to
                    their identity
                    </para> </listitem>
                <listitem><para>
                    user2 creates a Team in eClub (using OrgMgmtEJB)
                    </para> </listitem>
                <listitem><para>
                    user2 assigns Players to a Team in eClub (using OrgMgmtEJB)
                    </para> </listitem>
                <listitem><para>
                    user2 assigns Coach to a Team in eClub (using OrgMgmtEJB)
                    </para> </listitem>
                <listitem><para>
                    user2 assigns Manager to a Team in eClub (using OrgMgmtEJB)
                    </para> </listitem>
                <listitem><para>
                    user3 views their team roster in eClub (using OrgMgmtEJB)
                    </para> </listitem>
                <listitem><para>
                    user2 adds a Team for Club in eLeague (using ClubMgmtEJB)
                    </para> </listitem>
                <listitem><para>
                    user2 adds a contact for a Team eLeague (using ClubMgmtEJB)
                    </para> </listitem>
                <listitem><para>
                    user2 assigns a Team to an existing Division eLeague
                    (using ClubMgmtEJB; division=U13-A, refid="Division-845")
                    </para> </listitem>
                <listitem><para>
                    user1(lmtucker) schedules a Season eLeague (using ContestMgmtEJB)
                    </para> </listitem>
                <listitem><para>
                    ContestMgmtEJB publishes schedule events to Schedule Topic
                    </para> </listitem>
                <listitem><para>
                    LeagueSubscriber receives messages related to its team. It
                    prints the contents of the message.
                    </para> </listitem>
                <listitem><para>
                    LeagueListenerMDB receives messages related to unfinished
                    contests. It obtains the e-mail addresses for members associated
                    with the team references in the message. It logs the message and
                    e-mail addresses.
                    </para> </listitem>
                <listitem><para>
                    anonymous users views Team Schedule in eClub (using OrgMgmtEJB)
                    </para> </listitem>
                <listitem><para>
                    EJBTimer fires a callback in ContestMgmtEJB
                    </para> </listitem>
                <listitem><para>
                    ContestMgmtEJB publishes reminder messages to the Schedule
                    Topic (same message processing occurs in LeagueSubscriber and
                    LeagueListerMDB).
                    </para> </listitem>
                <listitem><para>
                    Division coordinator(jtflynn) reports 
                    a Score in eLeague involving our club team (using ContestMgmtEJB)
                    </para> </listitem>
                <listitem><para>
                    anonymous user views Division Standings in eLeague (using LeagueMgmtEJB)
                    </para> </listitem>
            </orderedlist>
        </listitem>
    </orderedlist>
    <figure>
        <title>eSport Full Sequence</title>
        <graphic scalefit="1" fileref="images/esport-full-sequence.jpg"/>
    </figure>
</chapter>
  
