<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
   "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd"  [ ]>

<chapter id="esport-project2-grading">
    <title>Project 2 Grading</title>
    <para>
        Your project will be graded primarily on the demonstration ability to implement
        concepts covered in this portion of the course. A perfect score will need to 
        implement the full end-to-end scenario. A passing score will need to make sure
        to cover the grading criteria outlined below within the partial end-to-end 
        implemented.
    </para>
    <itemizedlist spacing="compact">
        <listitem><para>
            README provided that describes where each requirement satisfied and describes the non-obvious: 10pts total
            </para></listitem>

        <listitem><para>
            Projects cleanly builds with Maven and deploys required modules: 12pts total
            </para>
            <itemizedlist spacing="compact">
              <listitem><para>
                  Project cleanly builds the required modules (JAR, EJB, WAR, and EAR) with Maven: 3pts
                  </para></listitem>
              <listitem><para>
                  Build automatically deploys the applications to the server for IT tests: 3pts
                  </para></listitem>
              <listitem><para>
                  Project successfully deploys a persistence unit within an EJB and WAR modules: 3pts
                  </para></listitem>
              <listitem><para>
                  Project successfully deploys EJBs within an EAR and WAR modules: 3pts
                  </para></listitem>
            </itemizedlist>
            </listitem>

        <listitem><para>
            Project 1 functionality: 10pts total
            </para>
            <itemizedlist spacing="compact">
              <listitem><para>
                  JPA entity mappings correct: 8pts
                  </para></listitem>
              <listitem><para>
                  Project 1 end-to-end unit tests still exist: 2pts
                  </para></listitem>
            </itemizedlist>
            </listitem>

        <listitem><para>
            EJB Tier: 15pts total
            </para>
            <itemizedlist spacing="compact">
              <listitem><para>
                  Demonstrated ability to configure EJB with necessary resources and/or dependencies: 5pts
                  </para></listitem>
              <listitem><para>
                  Demonstrated ability to complete a call from the remote client to the database and back: 5pts
                  </para></listitem>
              <listitem><para>
                  Correct use of stateless constructs: 5pts
                  </para></listitem>
            </itemizedlist>
            </listitem>

        <listitem><para>
            RMI Interface: 9pts total
            </para>
            <itemizedlist spacing="compact">
              <listitem><para>
                  Demonstrated ability to define a @Remote interface and expose using JNDI: 3pts
                  </para></listitem>
              <listitem><para>
                  Demonstrated ability to lookup a @Remote interface using JNDI: 3pts
                  </para></listitem>
              <listitem><para>
                  Demonstrated ability to invoke an EJB method using RMI: 3pts
                  </para></listitem>
            </itemizedlist>
            </listitem>

        <listitem><para>
            JAX-RS Interface: 17pts total
            </para>
            <itemizedlist spacing="compact">
              <listitem><para>
                  Demonstrated ability to marshal and demarshal payloads from/to XML or JSON into/from DTO classes: 5pts
                  </para></listitem>
              <listitem><para>
                  Demonstrated ability to define an HTTP resource endpoint: 5pts
                  </para>
                  <itemizedlist spacing="compact">
                    <listitem><para>
                        Demonstrated ability to define a resource URI path.
                        </para></listitem>
                    <listitem><para>
                        Demonstrated ability to use HTTP methods properly with respect to actions performed.
                        </para></listitem>
                    <listitem><para>
                        Demonstrated ability to map an input method parameter from URI and query parameters.
                        </para></listitem>
                    <listitem><para>
                        Demonstrated ability to use status codes properly with respect to result status.
                        </para></listitem>
                  </itemizedlist>
                  </listitem>
              <listitem><para>
                  Demonstrated ability to implement a JAX-RS client interface and invoke an HTTP resource endpoint: 5pts
                  </para></listitem>
              <listitem><para>
                  Demonstrated ability inject an EJB into a JAX-RS class and delegate implementation to the EJB: 2pts
                  </para></listitem>
            </itemizedlist>
            </listitem>

        <listitem><para>
            Web UI integration: 10pts total
            </para>
            <itemizedlist spacing="compact">
              <listitem><para>
                  Implementation of a browser-based, server-side Web UI: 3pts
                  </para></listitem>
              <listitem><para>
                  Demonstrated ability to inject an EJB into the Servlet class to implement functionality behind the Web UI: 2pts
                  </para></listitem>
              <listitem><para>
                  Implementation of at least one entire use case from prompt, request, action, and response: 5pts
                  </para></listitem>
            </itemizedlist>
            </listitem>

        <listitem><para>
            Transactions: 7pts total
            </para>
            <itemizedlist spacing="compact">
              <listitem><para>
                  Explicit transaction attribute defined: 2pts
                  </para></listitem>
              <listitem><para>
                  Proper demonstration of data flushed to DB being rolled back: 5pts
                  </para></listitem>
            </itemizedlist>
            </listitem>

        <listitem><para>
            End-to-end Integration Test: 10pts total
            </para>
            <itemizedlist spacing="compact">
              <listitem><para>
                  Clean, easy to follow, sequence of steps through the end-to-end flow demonstrated: 10pts
                  </para></listitem>
            </itemizedlist>
            </listitem>

    </itemizedlist>

    <para>
        The following table contains examples of where projects have lost 
        points in the past. Of course, each project submitted can introduce
        new issues or different severity levels of the same issues. Do not
        treat this as a complete list.
    </para>
    <table>
        <title>Sample Lost Points</title>
        <tgroup cols='4' align='left' colsep='1' rowsep='0'>
            <colspec colname="area"/>
            <colspec colname="points"/>
            <thead>
                <row>
                  <entry>README</entry>
                </row>
            </thead>
            <tbody>
                <row rowsep="1">
                  <entry namest="area">Not provided</entry>
                  <entry namest="points">10</entry>
                </row>                        
                <row rowsep="1">
                  <entry namest="area">README did not indicate where X was located and it was not obvious even after ...</entry>
                  <entry namest="points">2</entry>
                </row>                        
                <row rowsep="1">
                  <entry namest="area">The WebUI is hard to navigate (fine) but README offered no assistance</entry>
                  <entry namest="points">5</entry>
                </row>                        
            </tbody>
        </tgroup>

        <tgroup cols='4' align='left' colsep='1' rowsep='0'>
            <colspec colname="area"/>
            <colspec colname="points"/>
            <thead>
                <row>
                  <entry>Projects cleanly builds with Maven</entry>
                </row>
            </thead>
            <tbody>
                <row rowsep="1">
                  <entry namest="area">
                     One of your IT tests assume the DB is setup correctly prior to running and that would only be true of 
                     we were running a common server database instance across our unit and IT tests.
                    </entry>
                  <entry namest="points">2</entry>
                </row>                        
                <row rowsep="1">
                  <entry namest="area">
                     Testing does not produce consistent results - out of four runs of mvn install the process failed twice and succeeded twice.
                    </entry>
                  <entry namest="points">2</entry>
                </row>                        
                <row rowsep="1">
                  <entry namest="area">
                    Build was not portable. I had to make changes. Sending me a copy of this beforehand would have caught this.
                    </entry>
                  <entry namest="points">2</entry>
                </row>                        
            </tbody>
        </tgroup>

        <tgroup cols='4' align='left' colsep='1' rowsep='0'>
            <colspec colname="area"/>
            <colspec colname="points"/>
            <thead>
                <row>
                  <entry>Project 1 functionality</entry>
                </row>
            </thead>
            <tbody>
                <row rowsep="1">
                  <entry namest="area">DB schema is under-constrained</entry>
                  <entry namest="points">1</entry>
                </row>                        
                <row rowsep="1">
                  <entry namest="area">Project 1 end-to-end scenarios no longer exist/run</entry>
                  <entry namest="points">2</entry>
                </row>                        
            </tbody>
        </tgroup>

        <tgroup cols='4' align='left' colsep='1' rowsep='0'>
            <colspec colname="area"/>
            <colspec colname="points"/>
            <thead>
                <row>
                  <entry>EJB Tier, remote interface, and EAR deployment</entry>
                </row>
            </thead>
            <tbody>
                <row rowsep="1">
                  <entry namest="area">
                      Attempting to set the state of a @Stateless EJB. What do you think will happen to that state 
                      when you get a different bean instance the next time you call?
                      </entry>
                  <entry namest="points">5</entry>
                </row>                        
                <row rowsep="1">
                  <entry namest="area">
                    With auto-create DDL turned on (hibernate.hbm2ddl.auto" value="create") your application deletes all data when redeployed.
                    Deleting all data should be restricted to only an explicit call to resetAll().
                    </entry>
                  <entry namest="points">5</entry>
                </row>                        
                <row rowsep="1">
                  <entry namest="area">
                    Not separating a single call into separate transactions to drop and then create schema. First action may fail when not exist.
                    </entry>
                  <entry namest="points">2</entry>
                </row>                        
                <row rowsep="1">
                  <entry namest="area">
                    You have methods that will only work in a @Local interface as part of your @Remote interface
                    </entry>
                  <entry namest="points">2</entry>
                </row>                        
                <row rowsep="1">
                  <entry namest="area">
                    Reusing business logic classes instead if EJB components - repeating the same work of the reusable EJB component in each EJB that needs to reuse the
                    functionality. Inject @Local interfaces. Do not repeat instantiation and setup of identical business logic/DAO classes.
                    </entry>
                  <entry namest="points">2</entry>
                </row>                        
                <row rowsep="1">
                  <entry namest="area">
                    Injest was not implemented within a deployed EJB. It was mistakely implemented the same as project 1 in a JUnit client.
                    </entry>
                  <entry namest="points">5</entry>
                </row>                        
                <row rowsep="1">
                  <entry namest="area">
                    You have not integrated the two applications at the EJB remote interface level. The second application does not make a single remote call to the first
                    application. All interaction is occcuring outside of the server-side and results passed in.
                    </entry>
                  <entry namest="points">5</entry>
                </row>                        
            </tbody>
        </tgroup>

        <tgroup cols='4' align='left' colsep='1' rowsep='0'>
            <colspec colname="area"/>
            <colspec colname="points"/>
            <thead>
                <row>
                  <entry>WAR/EJB deployment</entry>
                </row>
            </thead>
            <tbody>
                <row rowsep="1">
                  <entry namest="area">
                    You are deploying EJBs from the first application within your second application's WAR. Look at your built/deployed artifact and correct dependencies.
                    </entry>
                  <entry namest="points">5</entry>
                </row>                        
            </tbody>
        </tgroup>

        <tgroup cols='4' align='left' colsep='1' rowsep='0'>
            <colspec colname="area"/>
            <colspec colname="points"/>
            <thead>
                <row>
                  <entry>Web UI integration</entry>
                </row>
            </thead>
            <tbody>
                <row rowsep="1">
                  <entry namest="area">
                    UI does not provide a path to satisfy a step in the end-to-end scenario (that the IT test shows works).
                    </entry>
                  <entry namest="points">2</entry>
                </row>                        
                <row rowsep="1">
                  <entry namest="area">
                    EJB/Impl functionality called by UI fails and is not exercised by end-to-end IT test
                    </entry>
                  <entry namest="points">2</entry>
                </row>                        
                <row rowsep="1">
                  <entry namest="area">
                    This is a real bust when tested on the deployment platform. This should have been easily noticed. Pressing resetAll() results in the following error
                    displayed.
                    </entry>
                  <entry namest="points">5</entry>
                </row>                        
            </tbody>
        </tgroup>

        <tgroup cols='4' align='left' colsep='1' rowsep='0'>
            <colspec colname="area"/>
            <colspec colname="points"/>
            <thead>
                <row>
                  <entry>Transactions</entry>
                </row>
            </thead>
            <tbody>
                <row rowsep="1">
                  <entry namest="area">
                    Transaction scope not explicitly defined for EJB. You are accepting container defaults.
                    </entry>
                  <entry namest="points">1</entry>
                </row>                        
                <row rowsep="1">
                  <entry namest="area">
                    No attempt to demonstrate transaction rollback
                    </entry>
                  <entry namest="points">10</entry>
                </row>                        
                <row rowsep="1">
                  <entry namest="area">
                    Scenario shows business logic check but not a rollback of actions (store) to a transactional resource (DB).  
                    The requirement called for you to persist something all the way to the database - such that if you stopped 
                    in a breakpoint you would see the data - and then have the data thrown away due to a rollback.
                    </entry>
                  <entry namest="points">7</entry>
                </row>                        
            </tbody>
        </tgroup>

        <tgroup cols='4' align='left' colsep='1' rowsep='0'>
            <colspec colname="area"/>
            <colspec colname="points"/>
            <thead>
                <row>
                  <entry>End-to-end Integration Test</entry>
                </row>
            </thead>
            <tbody>
                <row rowsep="1">
                  <entry namest="area">Poluted, hard to follow, too much extra stuff</entry>
                  <entry namest="points">2</entry>
                </row>                        
                <row rowsep="1">
                  <entry namest="area">Missing resetAll and populate at start of scenarios</entry>
                  <entry namest="points">5</entry>
                </row>                        
                <row rowsep="1">
                  <entry namest="area">Missing step X</entry>
                  <entry namest="points">1</entry>
                </row>                        
                <row rowsep="1">
                  <entry namest="area">No. I want different functionality in this step</entry>
                  <entry namest="points">1</entry>
                </row>                        
            </tbody>
        </tgroup>
    </table>

</chapter>
  
