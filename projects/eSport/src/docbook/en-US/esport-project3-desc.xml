<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
   "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd"  [ ]>

<chapter id="esport-project3-desc">
    <title>eSport Project 3 Description</title>
    <subtitle>Secure and Asynchronous N-Tier Application</subtitle>

    <section id="esport-project3-purpose">
        <title>Purpose</title>

        <section id="esport-project3-goals">
            <title>Goals</title>
            <itemizedlist spacing="compact">
                <listitem><para>
                    Secure access to EJB and Web applications
                    </para> </listitem>
                <listitem><para>
                    Decouple business logic from common tasks 
                    </para> </listitem>
                <listitem><para>
                    Provide for asynchronous processing.
                    </para> </listitem>
            </itemizedlist>
            <para></para>
        </section>

        <section id="esport-project3-objectives">
            <title>Objectives</title>
            <itemizedlist spacing="compact">
                <listitem><para>
                    Re-use the eLeague and eClub implementations from projects 1 and 2.
                    </para></listitem>
                <listitem><para>
                    Define access controls and implement authentication mechanisms for 
                    applications.
                    </para></listitem>
                <listitem><para>
                    Implement DTO validation using interceptors
                    </para></listitem>
                <listitem><para>
                    Implement a publish/subscribe capability between eLeague, eClub,
                    and stand-alone client applications.
                    </para></listitem>
                <listitem><para>
                    Trigger certain behaviors based on timers.
                    </para></listitem>
            </itemizedlist>
            <para></para>
        </section>
    </section>

    <section id="esport-project3-techoverview">
        <title>Technical Overview</title>

        <para>
            The project will build on the core implementation from Projects 1 and
            2. We will mostly extend existing projects with security and
            asynchronous logic. 
        </para>

        <para>
            Java EE defines authentication and authorization to be independent
            of the overall API and capability. JBoss and other application
            servers provide simple, default mechanisms that are easy to
            demonstrate and more sophisticated mechanisms that are realistic for
            deployments that require no change to the JavaEE-compliant application code.  
            We will use the simple, default/"other" security-domain defined
            within the standard JBoss installation. This uses the RealmUsersRoles
            login-module -- which is powered by two property files supplied and
            pre-populated by the course server files from ejava-wildfly.
        </para>

        <table>
            <title>User Credential Files</title>
            <tgroup cols='2' align='left' colsep='1' rowsep='0'>
            <colspec colname="file"/>
            <colspec colname="desc"/>
            <thead>
                <row>
                  <entry>File</entry>
                  <entry>Description</entry>
                </row>
            </thead>
            <tbody>
                <row rowsep="1">
                   <entry namest="file">
                        ${jboss.server.config.dir}/application-users.properties
                        </entry>
                   <entry namest="desc">
                        defines username=password lines that list the login username and hashed password
                        </entry>
                </row>
                <row rowsep="1">
                   <entry namest="file">
                        ${jboss.server.config.dir}/application-roles.properties
                        </entry>
                   <entry namest="desc">
                        defines username=role1,role2 lines that list the login username and assigned roles
                        </entry>
                </row>
            </tbody>
            </tgroup>
        </table>    

        <para>
            We are going to have several types of user roles. Some of the users will
            have zero, one, or more of these roles. Because of the static nature of
            our authentication, all users will have a login configured before
            the application is even deployed to the server.
        </para>

        <table>
            <title>Application Roles</title>
            <tgroup cols='2' align='left' colsep='1' rowsep='0'>
            <colspec colname="role"/>
            <colspec colname="desc"/>
            <thead>
                <row>
                  <entry>Role</entry>
                  <entry>Description</entry>
                </row>
            </thead>
            <tbody>
                <row rowsep="1">
                   <entry namest="role">anonymous</entry>
                   <entry namest="desc">
                        These users can view standings and schedules in league
                        </entry>
                </row>
                <row rowsep="1">
                   <entry namest="role">eleague-sys</entry>
                   <entry namest="desc">
                        Authorized to publish to eLeague topic
                        </entry>
                </row>
                <row rowsep="1">
                   <entry namest="role">eleague-user</entry>
                   <entry namest="desc">
                        Authorized to subscribe to eLeague topic
                        </entry>
                </row>
                <row rowsep="1">
                   <entry namest="role">eleague-admin</entry>
                   <entry namest="desc">
                        Authorized to reset and populate the database
                        </entry>
                </row>
                <row rowsep="1">
                   <entry namest="role">eleague-coord</entry>
                   <entry namest="desc">
                        Authorized to create season, divisions, clubs, 
                        and schedule contests.
                        </entry>
                </row>
                <row rowsep="1">
                   <entry namest="role">eleague-clubcoord</entry>
                   <entry namest="desc">
                        Authorized to create teams, provide contacts for the teams, 
                        and assign them to divisions.
                        </entry>
                </row>
                <row rowsep="1">
                   <entry namest="role">eleague-divcoord</entry>
                   <entry namest="desc">
                        Authorized to report scores.
                        </entry>
                </row>
                <row rowsep="1">
                   <entry namest="role">eclub-admin</entry>
                   <entry namest="desc">
                        Authorized to run ClubTestUtil operations.
                        </entry>
                </row>
                <row rowsep="1">
                   <entry namest="role">eclub-member</entry>
                   <entry namest="desc">
                        Authorized to obtain team rosters and
                        update contact and role information.
                        </entry>
                </row>
                <row rowsep="1">
                   <entry namest="role">eclub-coord</entry>
                   <entry namest="desc">
                        Authorized to create teams and assign players, 
                        coaches, and managers.
                        </entry>
                </row>
            </tbody>
            </tgroup>
        </table>    

        <para>
            If a user has a login for one application, they will use the same
            account to access the other application 
            (e.g., user1 might have both eclub-coord and eleague-clubcoord roles).
        </para>

        <table>
            <title>User Roles</title>
            <tgroup cols='2' align='left' colsep='1' rowsep='0'>
            <colspec colname="user"/>
            <colspec colname="roles"/>
            <thead>
                <row>
                  <entry>User</entry>
                  <entry>Roles</entry>
                </row>
            </thead>
            <tbody>
                <row rowsep="1">
                   <entry namest="user">known</entry>
                   <entry namest="roles">
                   (no roles)
                   </entry>
                </row>
                <row rowsep="1">
                   <entry namest="user">eleaguesys1</entry>
                   <entry namest="roles">
                    eleague-sys
                   </entry>
                </row>
                <row rowsep="1">
                   <entry namest="user">eclubsys1</entry>
                   <entry namest="roles">
                    eleague-user
                   </entry>
                </row>
                <row rowsep="1">
                   <entry namest="user">admin1</entry>
                   <entry namest="roles">
                    eleague-admin,eclub-admin
                   </entry>
                </row>
                <row rowsep="1">
                   <entry namest="user">lmtucker</entry>
                   <entry namest="roles">
                    eleague-coord
                   </entry>
                </row>
                <row rowsep="1">
                   <entry namest="user">user2</entry>
                   <entry namest="roles">
                    eleague-clubcoord,eclub-coord,eclub-member
                   </entry>
                </row>
                <row rowsep="1">
                   <entry namest="user">user3</entry>
                   <entry namest="roles">
                    eclub-member
                   </entry>
                </row>
                <row rowsep="1">
                   <entry namest="user">jtflynn</entry>
                   <entry namest="roles">
                    eleague-divcoord
                   </entry>
                </row>
            </tbody>
            </tgroup>
        </table>    

        <para>
        Based on the test data, the following are some other logins that may 
        be useful...
        </para>

        <table>
            <title>Other Users/Roles</title>
            <tgroup cols='2' align='left' colsep='1' rowsep='0'>
            <colspec colname="roles"/>
            <colspec colname="users"/>
            <thead>
                <row>
                  <entry>Role</entry>
                  <entry>Users</entry>
                </row>
            </thead>
            <tbody>
                <row rowsep="1">
                   <entry namest="role">eleague-clubcoord</entry>
                   <entry namest="users">
                    tbswanson,
                    kdromero,
                    sthart,
                    lmfuller,
                    rgrobbins,
                    gchamilton,
                    avschultz,
                    jcbell,
                    user4
                   </entry>
                </row>
                <row rowsep="1">
                   <entry namest="role">eleague-divcoord</entry>
                   <entry namest="users">
                    jddavidson,
                    whlee,
                    pjjimenez,
                    ksharrison,
                    acrussell,
                    ckriley5687
                   </entry>
                </row>
            </tbody>
            </tgroup>
        </table>    

        <note>
            <para>
            To clarify, your application will have a static set of
            logins and will ingest a set of accounts. A user with a
            login and no account can login, but won't be able to do
            anything meaningful. A user with an account and no login
            won't be able to access the system. Normally the login would
            be created at the same time as the account. Except for your
            JBoss configuration and your "Create Account" logic, no other
            part of your project should be aware of this tradeoff made
            for class project simplicity.
            </para>
        </note>

        <para>
            Some actions are open to any users; authenticated or not.
            Authentication will be performed using a JNDI login for RMI, 
            BASIC for HTTP web services, and FORM for Web UIs.
            All users will have a password of "password1!".
        </para>

        <para>
          We will use HTTPS to provide confidentiality between our client and server
          for communications.  The server has a keystore for identity. The JUnit tests 
          can conveniently use that as a trustStore through the base path
          defined by the "jboss.home" property.
        </para>

<programlisting language=""><![CDATA[
# build/dependencies/pom.xml

<java.truststore>${jboss.home}/standalone/configuration/application.keystore</java.truststore>
...
<plugin>
    <artifactId>maven-failsafe-plugin</artifactId>
    <configuration>
        <systemPropertyVariables>
            <javax.net.ssl.trustStore>${java.truststore}</javax.net.ssl.trustStore>
]]></programlisting>                        

        <table>
            <title>HTTPS Keystore(s)</title>
            <tgroup cols='2' align='left' colsep='1' rowsep='0'>
            <colspec colname="file"/>
            <colspec colname="desc"/>
            <thead>
                <row>
                  <entry>File</entry>
                  <entry>Description</entry>
                </row>
            </thead>
            <tbody>
                <row rowsep="1">
                   <entry namest="file">
                        ${jboss.server.config.dir}/application.keystore
                        </entry>
                   <entry namest="desc">
                        Self-signed JKS keystore with server certificate. 
                        Also also used as client trustStore during testing.
                        </entry>
                </row>
            </tbody>
            </tgroup>
        </table>    

        <para>
            For asynchronous activity, we will implement a Schedule Topic where 
            eLeague will publish messages related to team schedules. 
            eClub will subscribe to the topic using a Message Driven 
            Bean to keep members up to date on schedule changes.
            A stand-alone client will also be used to subscribe to schedule
            events. A topic will have to be added to your JMS Server within
            JBoss. You will have to design the type, structure, and payload of
            the messages sent on that topic.
        </para>

        <para>
          eLeague will use EJB Timers to send out schedule reminders.
        </para>
            
    </section>
</chapter>
