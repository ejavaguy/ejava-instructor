<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
   "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd"  [ ]>

<chapter id="esport-project1-testing">
    <title>Project 1 Testing</title>

    <note>
        <para>
            The end-to-end scenario will test your business logic, DAO, and BOs in a 
            "happy path" scenario. Any white-box or black-box testing of alternate
            and error paths would be appropriate to put in the separate unit tests.
        </para>
    </note>
    <orderedlist spacing="compact">
        <listitem><para>
            Provide a JUnit test for your business objects (BOs) that
            test the manipulation of data. An example test might be to 
            
            try forming a contest between teams in separate divisions or schedule
            a contest that conflicts with a team and/or venue schedule. 

            These tests should be packaged with the BOs.  There should be a 
            separate project and test for both eLeague and eClub.  
            It is anticipated that these tests will be a minimal demonstration 
            of understanding.
            </para> </listitem>
        <listitem><para>
            Provide a JUnit test for your eLeague and eClub JPA DAOs. This
            should test the implementation for the required CRUD operations
            for each type of object. It is understood that some of the operations
            will be handled by cascades, so you might not have a set of methods
            handling each type of business object.  This test should be packaged
            with the DAOs.
            </para> </listitem>
        <listitem><para>
            Provide a JUnit test for your business logic to test the
            basic functionality of your business logic design, including ingest.
            The ingestor test should be able to reference a known data file and
            ingest records into the database using the DAOs. These tests
            should be packaged with the business logic implementation.
            </para> </listitem>
        <listitem><para>
            Provide a set of JUnit test programs to verify the following
            end-to-end scenario in eLeague.  This test should be implemented as
            a JUnit test and packaged with the business logic implementation.
            </para>
            <orderedlist spacing="compact">
                <listitem><para>
                    reset (using LeagueTestUtil) -- reset the eLeague 
                        database to an initial starting state.
                    </para> </listitem>
                <listitem><para>
                    ingest data (using LeagueIngestor) -- ingest the full XML test
                        data file.
                    </para> </listitem>
                <listitem><para>
                    createClub (using LeagueMgmtImpl)
                    </para> </listitem>
                <listitem><para>
                    addVenue (using ClubMgmtImpl)
                    </para> </listitem>
                <listitem><para>
                    addTeam (using ClubMgmtImpl)
                    </para> </listitem>
                <listitem><para>
                    updateContact for team (using ClubMgmtImpl)
                    </para> </listitem>
                <listitem><para>
                    assignTeamDivision (using LeagueMgmtImpl) - divisions already
                    exist for current/next season within the test data.
                    </para> </listitem>
                <listitem><para>
                    scheduleSeason (using ContestMgmtImpl)
                    </para> </listitem>
                <listitem><para>
                    getDivisions (using LeagueMgmtImpl)
                    </para> </listitem>
                <listitem><para>
                    getDivisionStandings (using LeagueMgmtImpl)
                    </para> </listitem>
                <listitem><para>
                    getTeam with schedule and results (using LeagueMgmtImpl)
                    </para> </listitem>
                <listitem><para>
                    reportScore (using ContestMgmtImpl)
                    </para> </listitem>
                <listitem><para>
                    getTeam with schedule and results (using LeagueMgmtImpl)
                    </para> </listitem>
                <listitem><para>
                    getDivisionStandings (using LeagueMgmtImpl)
                    </para> </listitem>
            </orderedlist>
        </listitem>
        <listitem><para>
            Provide a set of JUnit test programs to verify the following
            end-to-end scenario in eClub.  This test should be implemented as
            a JUnit test and packaged with the business logic implementation.
            Note that it is anticipated that you may only have time to create
            one team, with one player, manager, parent, and coach for the club.
            </para> 
            <orderedlist spacing="compact">
                <listitem><para>
                  reset (using OrganizationTestUtil) -- reset the organization
                      database to an initial starting state.
                    </para> </listitem>
                <listitem><para>
                  createParent (MemberMgmtImpl) - parent depicted as Individual
                    </para> </listitem>
                <listitem><para>
                  createPlayer (MemberMgmtImpl)
                    </para> </listitem>
                <listitem><para>
                  createCoach (MemberMgmtImpl)
                    </para> </listitem>
                <listitem><para>
                  createTeam (using OrgMgmtImpl)
                    </para> </listitem>
                <listitem><para>
                  assignPlayers (using OrgMgmtImpl)
                    </para> </listitem>
                <listitem><para>
                  assignCoach (using OrgMgmtImpl)
                    </para> </listitem>
                <listitem><para>
                  assignManager (using OrgMgmtImpl)
                    </para> </listitem>
                <listitem><para>
                  getTeamRoster (using OrgMgmtImpl)
                    </para> </listitem>
                <listitem><para>
                  getTeamSchedule (using OrgMgmtImpl) - this will later
                    call eLeague for Contest information, but for now simply returns
                    an empty list.
                    </para> </listitem>
            </orderedlist>
        </listitem>
    </orderedlist>
</chapter>
  
