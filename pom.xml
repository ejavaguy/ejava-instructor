<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" 
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>info.ejava.docs</groupId>
    <artifactId>docs-root</artifactId>
    <version>4.0.0-SNAPSHOT</version>
    <packaging>pom</packaging>

    <name>Docs Root</name>
    <description>
        This project provides the root for all doc source modules.
    </description>

    <modules>
        <module>build</module>
        <module>intro</module>
        <module>javase</module>
        <module>jpa</module>
        <module>courses</module>
    </modules>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <maven-deploy-plugin.version>2.8.1</maven-deploy-plugin.version>
        <maven-resources-plugin.version>2.6</maven-resources-plugin.version>
        <maven-dependency-plugin.version>2.8</maven-dependency-plugin.version>        
        <maven-antrun-plugin.version>1.7</maven-antrun-plugin.version>
        <maven-jar-plugin.version>2.4</maven-jar-plugin.version>
        <maven-war-plugin.version>2.4</maven-war-plugin.version>
        <build-helper-maven-plugin.version>1.8</build-helper-maven-plugin.version>
    </properties>

    <scm>
        <url>https://github.com/ejavaguy/ejava-instructor</url>
        <connection>scm:git:git@github-ejavaguy:ejavaguy/ejava-instructor.git</connection>
        <developerConnection>scm:git:git@github-ejavaguy:ejavaguy/ejava-instructor.git</developerConnection>
        <tag>HEAD</tag>
    </scm>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>${maven-deploy-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>${maven-resources-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <version>${maven-dependency-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-antrun-plugin</artifactId>
                    <version>${maven-antrun-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>build-helper-maven-plugin</artifactId>
                    <version>${build-helper-maven-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>${maven-jar-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-war-plugin</artifactId>
                    <version>${maven-war-plugin.version}</version>
                    <configuration>
                        <failOnMissingWebXml>false</failOnMissingWebXml>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

    <profiles>
        <profile>
            <id>docbook</id>
            <activation>
                <file>
                    <exists>src/docbook</exists>
                </file>
            </activation>
            <properties>
                <docProfile>jhu784-style</docProfile>
                <docProfile.version>${project.version}</docProfile.version>
                <doc.base>${project.artifactId}</doc.base>
                <sourceDocumentName>${doc.base}.xml</sourceDocumentName>
                <htmlName>${doc.base}.html</htmlName>
                <pdfName>${doc.base}.pdf</pdfName>
                <copyright.holder>jim stafford (jim.stafford@jhu.edu)</copyright.holder>
                <datePattern>yyyy-MM-dd HH:mm z</datePattern>
                <timeZone>EST</timeZone>

                <maven-jdocbook-plugin.version>2.3.4</maven-jdocbook-plugin.version>
            </properties>
            <dependencyManagement>
                <dependencies>
                    <dependency>
                      <groupId>org.eclipse.equinox</groupId>
                      <artifactId>app</artifactId>
                      <version>1.0.0-v20070606</version>
                    </dependency>
                    <dependency>
                      <groupId>org.eclipse.core</groupId>
                      <artifactId>runtime</artifactId>
                      <version>3.3.100-v20070530</version>
                    </dependency>
                </dependencies>
            </dependencyManagement>
            <repositories>
                <repository>
                    <id>jboss-nexus</id>
                    <name>JBoss Nexus Repository</name>
                    <url>https://repository.jboss.org/nexus/content/groups/public-jboss/</url>
                    <releases>
                        <enabled>true</enabled>
                        <updatePolicy>never</updatePolicy>
                    </releases>
                    <snapshots>
                        <enabled>true</enabled>
                        <updatePolicy>never</updatePolicy>
                    </snapshots>
                </repository>
            </repositories>
            <pluginRepositories>
                <pluginRepository>
                    <id>jboss-nexus</id>
                    <name>JBoss Nexus Repository</name>
                    <url>https://repository.jboss.org/nexus/content/groups/public-jboss/</url>
                    <releases>
                        <enabled>true</enabled>
                        <updatePolicy>never</updatePolicy>
                    </releases>
                    <snapshots>
                        <enabled>true</enabled>
                        <updatePolicy>never</updatePolicy>
                    </snapshots>
                </pluginRepository>
            </pluginRepositories>
            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>org.jboss.maven.plugins</groupId>
                            <artifactId>maven-jdocbook-plugin</artifactId>
                            <version>${maven-jdocbook-plugin.version}</version>
                            <extensions>true</extensions>
                            <executions>
                                <execution>
                                    <id>docbook-prepare</id>
                                    <phase>prepare-package</phase>
                                    <goals>
                                        <goal>resources</goal>
                                        <goal>generate</goal>
                                    </goals>
                                </execution>
                                <execution>
                                    <id>docbook-package</id>
                                    <phase>package</phase>
                                    <goals>
                                        <goal>bundle</goal>
                                    </goals>
                                </execution>
                            </executions>
                            <dependencies>
                                <dependency>
                                    <groupId>net.sf.docbook</groupId>
                                    <artifactId>docbook</artifactId>
                                    <version>1.72.0</version>
                                </dependency>
                                <dependency>
                                    <groupId>org.jboss.docs</groupId>
                                    <artifactId>highlight</artifactId>
                                    <version>1.0.0</version>
                                </dependency>
                                <dependency>
                                    <groupId>org.jboss</groupId>
                                    <artifactId>jbossorg-jdocbook-style</artifactId>
                                    <version>1.1.1</version>
                                    <type>jdocbook-style</type>
                                </dependency>
                            </dependencies>
                            <configuration>
                                <sourceDirectory>${basedir}/target/resources/ejava/docs</sourceDirectory>
                                <sourceDocumentName>${sourceDocumentName}</sourceDocumentName>
                                <cssResource>
                                    <directory>${basedir}/target/resources/ejava/docs</directory>
                                    <includes>
                                        <include>css/*</include>
                                    </includes>
                                </cssResource>
                                <imageResource>
                                    <directory>${basedir}/target/resources/ejava/docs</directory>
                                    <includes>
                                        <include>images/*</include>
                                    </includes>
                                </imageResource>
            
                                <options>
                                    <xincludeSupported>true</xincludeSupported>
                                    <xmlTransformerType>saxon</xmlTransformerType>
                                    <docbookVersion>1.72.0</docbookVersion>
                                    <transformerParameters>
                                        <property>
                                            <name>javax.xml.parsers.DocumentBuilderFactory</name>
                                            <value>org.apache.xerces.jaxp.DocumentBuilderFactoryImpl</value>
                                        </property>
                                        <property>
                                            <name>javax.xml.parsers.SAXParserFactory</name>
                                            <value>org.apache.xerces.jaxp.SAXParserFactoryImpl</value>
                                        </property>
                                    </transformerParameters>
                                </options>
                                <formats>
                                    <format>
                                        <formatName>html</formatName>
                                        <stylesheetResource>file://${project.build.directory}/resources/ejava/docs/xslt/xhtml.xsl</stylesheetResource>
                                        <finalName>${htmlName}</finalName>
                                    </format>
                                    <format>
                                        <formatName>html_single</formatName>
                                        <stylesheetResource>file://${project.build.directory}/resources/ejava/docs/xslt/xhtml-single.xsl</stylesheetResource>
                                        <finalName>${htmlName}</finalName>
                                    </format>
                                    <format>
                                        <formatName>pdf</formatName>
                                        <stylesheetResource>file://${project.build.directory}/resources/ejava/docs/xslt/pdf.xsl</stylesheetResource>
                                        <finalName>${pdfName}</finalName>
                                    </format>
                                </formats>
                            </configuration>
                        </plugin>
                    </plugins>
                </pluginManagement>
        
        
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <!-- unpack any upsteam docsrc we wish to place into this module -->
                        <executions>
                            <execution>
                                <id>unpack-modules</id>
                                <phase>generate-sources</phase>
                                <goals>
                                    <goal>unpack-dependencies</goal>
                                </goals>
                                <configuration>
                                    <classifier>docsrc</classifier>
                                    <outputDirectory>${basedir}/target/resources/ejava/docs</outputDirectory>
                                    <includes>en-US/**/*,images/**/*</includes>
                                </configuration>
                            </execution>

                            <!-- unzip the web artifacts into the current docbook project -->
                            <execution>
                                <id>unpack-stylesheet</id>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>unpack</goal>
                                </goals>
                                <configuration>
                                    <artifactItems>
                                        <artifactItem>
                                            <groupId>info.ejava.docs.build</groupId>
                                            <artifactId>${docProfile}</artifactId>
                                            <version>${docProfile.version}</version>
                                        </artifactItem>
                                    </artifactItems>
                                    <outputDirectory>${basedir}/target/resources</outputDirectory>
                                    <includes>ejava/**/*</includes>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
        
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>build-helper-maven-plugin</artifactId>
                        <executions>
                            <!-- generate a date when the build was performed -->
                            <execution>
                                <id>generate-pubdate</id>
                                <phase>initialize</phase>
                                <goals>
                                    <goal>timestamp-property</goal>
                                </goals>
                                <configuration>
                                    <name>docbook.pubdate</name>
                                    <pattern>${datePattern}</pattern>
                                    <timeZone>${timeZone}</timeZone>
                                    <locale>en_US</locale>
                                </configuration>
                            </execution>
                            <!-- generate a YYYY date for the copyright -->
                            <execution>
                                <id>generate-copyright-date</id>
                                <phase>initialize</phase>
                                <goals>
                                    <goal>timestamp-property</goal>
                                </goals>
                                <configuration>
                                    <name>copyright.year</name>
                                    <pattern>yyyy</pattern>
                                    <locale>en_US</locale>
                                </configuration>
                            </execution>
                            <!-- add the product WAR to the project to be placed with the repo -->
                            <execution>
                                <id>attach-war</id>
                                <phase>package</phase>
                                <goals>
                                  <goal>attach-artifact</goal>
                                </goals>
                                <configuration>
                                  <artifacts>
                                      <artifact>
                                          <file>${basedir}/target/classes/${project.artifactId}-${project.version}.war</file>
                                          <type>war</type>
                                      </artifact>
                                  </artifacts>
                                </configuration>
                            </execution>
                        </executions>
                     </plugin>

                    <!-- copy resources to the target tree where we will direct docbook to process it
                         after we augment with other files and do some filtering on the files to add in 
                         dates and other variable properties.
                         -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-resources-plugin</artifactId>
                        <executions>
                            <execution>
                                <phase>generate-sources</phase>
                                <goals>
                                  <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${basedir}/target/resources/ejava/docs</outputDirectory>
                                    <resources>          
                                        <resource>
                                            <directory>${basedir}/src/docbook</directory>
                                            <filtering>true</filtering>
                                        </resource>
                                    </resources>              
                                </configuration>            
                            </execution>
                        </executions>
                    </plugin>
        
        
                    <!-- Change any of the "topic" books into sections so that they can be combined into 
                         a master book containing multiple topics organized into sections.
                         -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <executions>
                            <execution>
                                <phase>process-sources</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <target>
                                        <!-- turn each re-used book into a docbook section to become 
                                             part of this book -->
                                        <copy todir="${basedir}/target/resources/ejava/docs" verbose="true">
                                            <fileset dir="${basedir}/target/resources/ejava/docs">
                                                <include name="**/*-book.xml"/>
                                            </fileset>
                                            <globmapper from="*-book.xml" to="*-part.xml"/>
                                            <filterset begintoken="&lt;" endtoken="id">
                                                <filter token="book " value="&lt;part id"/>
                                            </filterset>
                                            <filterset begintoken="&lt;/" endtoken="&gt;">
                                                <filter token="book" value="&lt;/part&gt;"/>
                                            </filterset>
                                            <filterset begintoken="&lt;" endtoken="&gt;">
                                                <filter token="bookinfo" value="&lt;partinfo&gt;"/>
                                            </filterset>
                                            <filterset begintoken="&lt;/" endtoken="&gt;">
                                                <filter token="bookinfo" value="&lt;/partinfo&gt;"/>
                                            </filterset>
                                        </copy>
                                    </target>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>

                    <!-- archive the filtered and adjusted source into a repository artifact where 
                         it can be included in aggregate book projects. Note the classifier (docsrc) is 
                         something we made up to help distinguish it from the other dependency artifacts
                         of the aggregate book project. -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-jar-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>attach-source</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>jar</goal>
                                </goals>
                                <configuration>
                                    <classifier>docsrc</classifier>
                                    <classesDirectory>target/resources/ejava/docs</classesDirectory>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
