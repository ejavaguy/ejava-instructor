<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
   "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd"  [ ]>

<chapter id="ejb-security-ejb">
    <title>EJB Security</title>
    <itemizedlist spacing="compact">
        <listitem><para>EJB access restrictions</para>
            <itemizedlist spacing="compact">
                <listitem><para>Declarative</para></listitem>
                <listitem><para>Programmatic</para></listitem>
            </itemizedlist>
        </listitem>
        <listitem><para>EJB assignment to Security Domain</para></listitem>
        <listitem><para>Server definition of Security Domain</para></listitem>
        <listitem><para>Server Security Domain authentication and authorization</para></listitem>
    </itemizedlist>

    <section id="ejb-security-ejb-declarative">
        <title>Declarative EJB Access Control</title>
        
        <figure>
            <title>Declarative EJB Access Control: Annotations</title>
<programlisting language="java"><![CDATA[@Stateless(name="SecurePingEJB")
public class SecurePingEJB implements SecurePingRemote, SecurePingLocal {
    ...
    @PermitAll
    public String pingAll() {
        return getInfo("pingAll");
    }

    @RolesAllowed({"user"})
    public String pingUser() {
        return getInfo("pingUser");
    }

    @RolesAllowed({"admin"})
    public String pingAdmin() {        
        return getInfo("pingAdmin");
    }

    @DenyAll
    public String pingExcluded() {
        return getInfo("pingExcluded");
    }
}]]></programlisting>
        </figure>
        <itemizedlist spacing="compact">
            <listitem><para><code>javax.annotation.security</code> annotations define caller role requirements to access EJB methods</para></listitem>
            <listitem><para>role can be literal or a logical mapping (see below)</para></listitem>
        </itemizedlist>
        
        
        <figure>
            <title>Declarative EJB Access Control: ejb-jar.xml</title>
<programlisting language="xml"><![CDATA[<assembly-descriptor>
...
    <method-permission>
        <unchecked/>
        <method>
            <ejb-name>SecurePingEJB</ejb-name>
            <method-name>pingAllmethod-name>
        </method>
    </method-permission>
    <method-permission>
        <role-name>admin</role-name>
        <method>
            <ejb-name>SecurePingEJB</ejb-name>
            <method-name>pingAdmin</method-name>
        </method>
    </method-permission>
    <method-permission>
        <role-name>user</role-name>
        <method>
            <ejb-name>SecurePingEJB</ejb-name>
            <method-name>pingUser</method-name>
        </method>
    </method-permission>
    <method-permission>
        <excluded/>
        <method>
            <ejb-name>SecurePingEJB</ejb-name>
            <method-name>pingExcluded</method-name>
        </method>
    </method-permission>
</assembly-descriptor>]]></programlisting>
        </figure>
        <itemizedlist spacing="compact">
            <listitem><para>Access restrictions can also be defined in the ejb-jar.xml deployment descriptor</para></listitem>
        </itemizedlist>

    </section>

    <section id="ejb-security-ejb-programmatic">
        <title>Programmatic Security</title>
        
        <figure>
            <title>Programmatic Role Check</title>
<programlisting language="java"><![CDATA[@Resource
SessionContext ctx;

    if (!ctx.isCallerInRole(role)) { 
        throw new EJBAccessException("..."); 
    }
]]></programlisting>
        </figure>
        <itemizedlist spacing="compact">
            <listitem><para>Permits method to determine when access should be checked</para></listitem>
        </itemizedlist>

        <figure>
            <title>Programmatic Property Check</title>
<programlisting language="java"><![CDATA[@Resource
SessionContext ctx;

@RolesAllowed({"admin"})
public String updateGreeting(String greeting) {        
  String login = ctx.getCallerPrincipal().getName();
  Office office = getOfficeByAdmin(login);

  if (office!=null) {
    office.setGreeting(greeting);
  }
]]></programlisting>
        </figure>
        <itemizedlist spacing="compact">
            <listitem><para>Permits more fine-grain access control down to the object level</para></listitem>
            <listitem><para>Caller is not only required to have "admin" role -- they must be admin of specific resource</para></listitem>
        </itemizedlist>

    </section>


    <section id="ejb-security-ejb-rolemap">
        <title>Optional Role Name Mapping</title>
        <itemizedlist spacing="compact">
            <listitem><para>Permits role-name within Java code to be mapped to security role</para></listitem>
            <listitem><para>No annotation for this. Must use descriptor or update referenced roles</para></listitem>
        </itemizedlist>

        <figure>
            <title>Optional Role Mapping: ejb-jar.xml</title>
<programlisting language="xml"><![CDATA[    <enterprise-beans>
        <session>
            <ejb-name>SecurePingEJB</ejb-name>
            <security-role-ref>
                <description>role-name checked within EJB</description>
                <role-name>internalRole</role-name>
                <role-link>admin</role-link>
            </security-role-ref>
        </session>
    </enterprise-beans>    
    <assembly-descriptor>
        <security-role>
            <role-name>admin</role-name>
        </security-role>
        <security-role>
            <role-name>user</role-name>
        </security-role>
    </assembly-descriptor>]]></programlisting>
        </figure>
    </section>

    <section id="ejb-security-ejb-setup">
        <title>EJB Security Setup</title>

        <figure>
            <title>EJB Security Setup: META-INF/jboss-ejb3.xml</title>
<programlisting language="xml"><![CDATA[<?xml version="1.0"?>  
<jboss:ejb-jar 
   xmlns:jboss="http://www.jboss.com/xml/ns/javaee"
   xmlns:sec="urn:security" 
   xmlns="http://java.sun.com/xml/ns/javaee"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://www.jboss.com/xml/ns/javaee http://www.jboss.org/j2ee/schema/jboss-ejb3-2_0.xsd
      http://java.sun.com/xml/ns/javaee http://www.jboss.org/j2ee/schema/jboss-ejb3-spec-2_0.xsd
      urn:security urn:security"
   version="3.1"
   impl-version="2.0">
    <assembly-descriptor>
        <sec:security>
            <ejb-name>*</ejb-name>
            <sec:security-domain>other</sec:security-domain>
            <sec:run-as-principal/>
        </sec:security>
    </assembly-descriptor>    
</jboss:ejb-jar>]]></programlisting>
        </figure>
        <itemizedlist spacing="compact">
            <listitem><para>security element assigns security properties to one or more EJBs</para></listitem>
            <listitem><para>security-domain assigns to a specific security-domain defined on server</para>
                <itemizedlist spacing="compact">
                    <listitem><para>"other" is default security-domain</para></listitem>
                </itemizedlist>
            </listitem>
            <listitem><para>run-as-principal defines the identity to authenticate and execute the EJB calls with</para>
                <itemizedlist spacing="compact">
                    <listitem><para>run-as-principal is default - call is authorized based on the caller's identity</para></listitem>
                </itemizedlist>
            </listitem>
        </itemizedlist>
    </section>

    <section id="ejb-security-ejb-summary">
        <title>Summary</title>
        <itemizedlist spacing="compact">
            <listitem><para>EJB access restrictions</para>
                <itemizedlist spacing="compact">
                    <listitem><para>Declarative</para></listitem>
                    <listitem><para>Programmatic</para></listitem>
                </itemizedlist>
            </listitem>
            <listitem><para>EJB assignment to Security Domain</para></listitem>
        </itemizedlist>
    </section>

</chapter>
  
