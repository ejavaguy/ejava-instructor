<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
   "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd"  [ ]>

<chapter id="ejb-jpa-injection">
    <title>Persistence Unit/Context Injection</title>
    <variablelist spacing="compact">
        <varlistentry>
            <term><filename>@PersistenceContext</filename></term>
            <listitem><para>Injected with EntityManager</para>
                <variablelist spacing="compact">
                    <varlistentry>
                        <term><filename>Transaction Scoped (default)</filename></term>
                        <listitem>
                            <itemizedlist spacing="compact">
                                <listitem><para>persistence context only sees a single Tx</para></listitem>
                                <listitem><para>container injects EntityManager with Tx active</para></listitem>
                            </itemizedlist>            
<programlisting language="java"><![CDATA[@PersistenceContext(unitName="ejbjpa-hotel", type=PersistenceContextType.TRANSACTION)
private EntityManager em;
]]></programlisting>
                        </listitem>
                    </varlistentry>
                    <varlistentry>
                        <term><filename>Extended Scope</filename></term>
                        <listitem>
                            <itemizedlist spacing="compact">
                                <listitem><para>persistence context may see multiple Tx</para></listitem>
                                <listitem><para>only relevant for Stateful EJBs</para></listitem>
                            </itemizedlist>            
<programlisting language="java"><![CDATA[@PersistenceContext(unitName="ejbjpa-hotel", type=PersistenceContextType.EXTENDED)
private EntityManager em;
]]></programlisting>
                        </listitem>
                    </varlistentry>
                </variablelist>
            </listitem>
        </varlistentry>
        <varlistentry>
            <term><filename>@PersistenceUnit</filename></term>
            <listitem><para>Injected with EntityManagerFactory</para>
                <itemizedlist spacing="compact">
                    <listitem><para>May be used to implement BEAN-managed transactions</para></listitem>
                </itemizedlist>
            </listitem>
        </varlistentry>
    </variablelist>

        
    <section id="ejb-jpa-injection-pc">
        <title>@PersistenceContext Injection</title>
        <itemizedlist spacing="compact">
            <listitem><para>@PersistenceContext.unitName is the name used within the persistence.xml</para></listitem>
            <listitem><para>@PersistenceContext.name would be the ENC name normally defined in ejb-jar.xml</para></listitem>
        </itemizedlist>
        
<programlisting language="java"><![CDATA[@Stateless
public class HotelMgmtEJB implements HotelMgmtRemote, HotelMgmtLocal {
    @PersistenceContext(unitName="ejbjpa-hotel")
    private EntityManager em;

    private HotelDAO dao;
    private HotelMgmt hotelMgmt; 
    
    @PostConstruct
    public void init() {
        dao = new JPAHotelDAO();
        ((JPAHotelDAO)dao).setEntityManager(em);
        
        hotelMgmt = new HotelMgmtImpl();
        ((HotelMgmtImpl)hotelMgmt).setHotelDao(dao);
    }]]></programlisting>
        <itemizedlist spacing="compact">
            <listitem><para>@PersistenceContext.synchronization</para>
                <itemizedlist spacing="compact">
                    <listitem><para>
                      SynchronizationType.SYNCHRONIZED (default) -- EntityManager automatically joined with jtaTransaction
                      </para></listitem>
                    <listitem><para>
                      SynchronizationType.UNSYNCHRONIZED -- EntityManager manually joined with jtaTransaction. Useful
                      for Stateful Session EJBs where interaction with EntityManager may span multiple client method 
                      calls.
                    </para></listitem>
                </itemizedlist>
            </listitem>
            <listitem><para>
                @PersistenceContext.type</para>
                <itemizedlist spacing="compact">
                    <listitem><para>
                      PersistenceContextType.TRANSACTION (default) - EntityManager transactions automatically 
                      managed by container and will invoke each root method once per transaction
                      </para></listitem>
                    <listitem><para>
                      PersistenceContextType.EXTENDED - EntityManager transactions may span multiple calls.
                      Useful for Stateful Session EJBs to retain state during a complete session
                    </para></listitem>
                </itemizedlist>
                </listitem>
        </itemizedlist>
    </section>
    
    <section id="ejb-jpa-injection-pu">
        <title>@PersistenceUnit Injection</title>
        <itemizedlist spacing="compact">
            <listitem><para>Persistence unit (EntityManagerFactory) being injected from a JTA-managed source</para>
                <itemizedlist spacing="compact">
                    <listitem><para>i.e., the transaction must be managed at JTA level</para></listitem>
                </itemizedlist>
            </listitem>
            <listitem><para>BEAN-managed transactions means JTA transaction controlled thru injected UserTransaction</para></listitem>
            <listitem><para>Method programmatically controlling scope of JTA transaction</para></listitem>
            <listitem><para>
                em.joinTransaction() called on EntityManager created outside scope of JTA transaction 
                </para></listitem>
        </itemizedlist>
        
<programlisting language="java"><![CDATA[@Singleton
@Startup
@TransactionManagement(TransactionManagementType.BEAN)
public class HotelInitEJB implements HotelInitRemote {
    @PersistenceUnit(unitName="ejbjpa-hotel")
    private EntityManagerFactory emf;
    
    @Resource
    private UserTransaction tx;
    
    @Override
    public void businessMethod() {
        EntityManager em=emf.createEntityManager();
        HotelDAO dao = new JPAHotelDAO();
        ((JPAHotelDAO)dao).setEntityManager(em);
        tx.begin();        
        em.joinTransaction(); //tells the EM to join the JTA Tx
        ...
        tx.commit();
        em.close();
    }
}]]></programlisting>
        
        
    </section>


    <section id="ejb-jpa-injection-section2">
        <title>Context and Dependency Injection (CDI)</title>
        <para>Newer technique -- JavaEE's answer to Spring Configuration</para>
  
        <itemizedlist spacing="compact">

            <listitem><para>Define qualifier annotation</para>
<programlisting language="java"><![CDATA[package ejava.examples.jndidemo;

import java.lang.annotation.Retention;
import java.lang.annotation.Target;
import static java.lang.annotation.RetentionPolicy.*;
import static java.lang.annotation.ElementType.*;
import javax.inject.Qualifier;

@Qualifier
@Retention(RUNTIME)
@Target({METHOD, FIELD, PARAMETER, TYPE})
public @interface JndiDemo {
}]]></programlisting>                        
            </listitem>


            <listitem><para>Define producer of Persistence Context</para>
<programlisting language="java"><![CDATA[import javax.enterprise.inject.Produces;
import javax.persistence.EntityManager;
import javax.persistence.PersistenceContext;

public class SchedulerResources {
    @PersistenceContext(unitName="jndidemo")
    @Produces
    @JndiDemo
    public EntityManager em;
]]></programlisting>                        
            </listitem>

            <listitem><para>Define injection point</para>
<programlisting language="java"><![CDATA[@Stateless
public class TrainSchedulerEJB 
    extends SchedulerBase implements TrainSchedulerRemote {

    @Inject @JndiDemo
    private EntityManager em;
]]></programlisting>                        
            </listitem>
        </itemizedlist>

        <tip>
          <title>Qualifier not always necessary</title>
          <para>The Qualifier annotation is only necessary when the deployed application 
          contains multiple producers of an EntityManager.</para>
        </tip>
    </section>

    <section id="ejb-jpa-injection-summary">
       <title>Summary</title>
        <itemizedlist spacing="compact">
            <listitem><para>@PersistenceContext - EntityManager</para></listitem>
            <listitem><para>@PersistenceUnit - EntityManagerFactory</para></listitem>
            <listitem><para>peek at CDI injection</para></listitem>
        </itemizedlist>
    </section>    
</chapter>
  
