<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
   "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd"  [ ]>

<chapter id="ejb-jpa-propagation">
    <title>Persistence Context Propagation</title>
    <itemizedlist spacing="compact">
        <listitem><para>EJB will instantiate persistence context if does not yet exist</para></listitem>
        <listitem><para>EJBs can share persistence contexts</para>
            <itemizedlist spacing="compact">
                <listitem><para>Stateless EJB can propagate its transaction-scoped persistence context to called EJB</para></listitem>
                <listitem><para>Stateful EJB can propagate its tx-scoped or extended persistence context to called EJB</para></listitem>
                <listitem><para>Stateless EJB can work with extended persistence context provided by Stateful client</para></listitem>
            </itemizedlist>
        </listitem>
        <listitem><para>EJB Facade can act as sharing point for common persistence context</para></listitem>
        <listitem><para></para></listitem>
    </itemizedlist>
    
    
        
    <section id="ejb-jpa-propagation-stateless">
        <title>Stateless Persistence Context Interaction</title>
        <itemizedlist spacing="compact">
            <listitem><para>Each interaction is independent of the next except for what is stored in DB and at client</para></listitem>
        </itemizedlist>
        
        
        <figure>
            <title>Stateless EJB Example Check-in</title>
<programlisting language="java"><![CDATA[@Override
public Guest checkIn(Guest guest, Room room) throws RoomUnavailableExcepton {
    Room hotelRoom = dao.getRoom(room.getNumber());
    dao.addGuest(guest);
    hotelRoom.setOccupant(guest);
    return guest;
}]]></programlisting>
        </figure>
        <itemizedlist spacing="compact">
            <listitem><para>(Error checking removed)</para></listitem>
            <listitem><para>Locate specific room</para></listitem>
            <listitem><para>Add guest to DB</para></listitem>
            <listitem><para>Associate room with guest</para></listitem>
        </itemizedlist>


        <figure>
            <title>Stateless EJB Example Client Check-in</title>
<programlisting language="java"><![CDATA[List<Room> availableRooms = hotelMgmt.getAvailableRooms(null, 0, 0);
logger.debug("we have {} available rooms", availableRooms.size());

List<Guest> members = new ArrayList<Guest>(availableRooms.size());
int i=0;
for (Room room: availableRooms) {
    Guest member = new Guest("member " + i++);
    member = hotelMgmt.checkIn(member, room);
    members.add(member);
}]]></programlisting>
        </figure>
        <itemizedlist spacing="compact">
            <listitem><para>Client performs actions one at a time</para></listitem>
        </itemizedlist>
        
        
        <figure>
            <title>EJB Gets Available Rooms from DB</title>
<programlisting language="java"><![CDATA[client: hotelMgmt.getAvailableRooms(null, 0, 0);

[HotelMgmtEJB] *** HotelMgmtEJB:init(1898030100) ***
[stdout] Hibernate: 
[stdout]     select
[stdout]         room0_.ROOM_NUMBER as ROOM_NUM1_2_,
[stdout]         room0_.FLOOR_ID as FLOOR_ID2_2_,
[stdout]         room0_.OCCUPANT_ID as OCCUPANT3_2_ 
[stdout]     from
[stdout]         EJBJPA_ROOM room0_ 
[stdout]     where
[stdout]         room0_.OCCUPANT_ID is null 
[stdout]     order by
[stdout]         room0_.ROOM_NUMBER asc]]></programlisting>
        </figure>
        <itemizedlist spacing="compact">
            <listitem><para>Persistence context created</para></listitem>
            <listitem><para>Available rooms loaded into persistence context</para></listitem>
            <listitem><para>Result is returned</para></listitem>
            <listitem><para>Persistence context destroyed</para></listitem>
        </itemizedlist>
        
        <figure>
            <title>EJB Gets Specific Room</title>
<programlisting language="java"><![CDATA[Room hotelRoom = dao.getRoom(room.getNumber());

[HotelMgmtEJB] *** HotelMgmtEJB:init(2026963085) ***
[HotelMgmtEJB] checkin(guest=org.jboss.as.jpa.container.TransactionScopedEntityManager@617b66f2, room={})
[stdout] Hibernate: 
[stdout]     select
[stdout]         room0_.ROOM_NUMBER as ROOM_NUM1_2_0_,
[stdout]         room0_.FLOOR_ID as FLOOR_ID2_2_0_,
[stdout]         room0_.OCCUPANT_ID as OCCUPANT3_2_0_ 
[stdout]     from
[stdout]         EJBJPA_ROOM room0_ 
[stdout]     where
[stdout]         room0_.ROOM_NUMBER=?]]></programlisting>
        </figure>
        <itemizedlist spacing="compact">
            <listitem><para>Persistence context created</para></listitem>
            <listitem><para>Specific room loaded into persistence context</para></listitem>
        </itemizedlist>
        
        <figure>
            <title>EJB Adds Guest</title>
<programlisting language="java"><![CDATA[dao.addGuest(guest);

[stdout] Hibernate: 
[stdout]     call next value for hibernate_sequence
[stdout] Hibernate: 
[stdout]     insert 
[stdout]     into
[stdout]         EJBJPA_GUEST
[stdout]         (name, GUEST_ID) 
[stdout]     values
[stdout]         (?, ?)]]></programlisting>
        </figure>
        <itemizedlist spacing="compact">
            <listitem><para>Guest inserted into DB</para></listitem>
        </itemizedlist>
        
        <figure>
            <title>EJB associates Guest with Room</title>
<programlisting language="java"><![CDATA[hotelRoom.setOccupant(guest);
        
[stdout] Hibernate: 
[stdout]     update
[stdout]         EJBJPA_ROOM 
[stdout]     set
[stdout]         FLOOR_ID=?,
[stdout]         OCCUPANT_ID=? 
[stdout]     where
[stdout]         ROOM_NUMBER=?]]></programlisting>
        </figure>
        <itemizedlist spacing="compact">
            <listitem><para>Room.occupant foreign key updated</para></listitem>
            <listitem><para>Guest returned to client</para></listitem>
            <listitem><para>Persistence context destroyed</para></listitem>
        </itemizedlist>
    </section>

    <section id="ejb-jpa-propagation-stateful">
        <title>Stateful Facade Persistence Context Interaction</title>
        <itemizedlist spacing="compact">
            <listitem><para>State can be cached in-memory on server-side</para></listitem>
            <listitem><para>Facade EJB propagates persistence context to called EJBs</para></listitem>
            <listitem><para></para></listitem>
        </itemizedlist>
        
        <figure>
            <title>Example Stateful Reservation EJB Caches Guest Requests for Client</title>
<programlisting language="java"><![CDATA[@Stateful
public class ReservationEJB implements ReservationRemote {
    @PersistenceContext(unitName="ejbjpa-hotel")
    private EntityManager em;
    
    List<Guest> guests = new LinkedList<Guest>();

    @Override
    @TransactionAttribute(TransactionAttributeType.NOT_SUPPORTED)
    public int addGuest(Guest guest) {
        logger.debug("em={}", em);
        if (guest!=null) {
            guests.add(guest);
        }
        return guests.size();
    }]]></programlisting>
        </figure>
        <itemizedlist spacing="compact">
            <listitem><para></para></listitem>
            <listitem><para></para></listitem>
        </itemizedlist>

        
            <figure>
                <title>Example Stateful Reservation EJB Acting on Cached State</title>
<programlisting language="java"><![CDATA[@Override
@TransactionAttribute(TransactionAttributeType.REQUIRED)
@Remove
public List<Guest> reserveRooms() throws RoomUnavailableExcepton {
    //do not get any locks on each room prior to making changes 
    List<Room> rooms = hotelMgmt.getAvailableRooms(null, 0, guests.size());

    //assign each one of them a room
    List<Guest> completed = new ArrayList<Guest>(guests.size());
    Iterator<Room> roomItr = rooms.iterator();
    for (Guest guest: guests) {
        Room room = roomItr.next();
        try {
            logger.debug("stateful.em contains(guest) before checkin={}", em.contains(guest));
            guest = hotelMgmt.checkIn(guest, room);
            logger.debug("stateful.em contains(guest) after checkin={}", em.contains(guest));
            completed.add(guest);
        } catch (RoomUnavailableExcepton ex) {
            //rollback any previous reservations
            ctx.setRollbackOnly();
            throw ex;
        }
    }
    return completed;
}]]></programlisting>
        </figure>
            <itemizedlist spacing="compact">
                <listitem><para></para></listitem>
                <listitem><para></para></listitem>
            </itemizedlist>


        <figure>
            <title>Stateful EJB Example Client Check-in</title>
<programlisting language=""><![CDATA[int availableRooms = hotelMgmt.getAvailableRooms(null, 0, 0).size();
logger.debug("we have {} available rooms", availableRooms);

ReservationRemote checkin = (ReservationRemote) jndi.lookup(reservationJNDI);
for (int i=0; i<availableRooms; i++) {
    Guest member = new Guest("member " + i);
    int count=checkin.addGuest(member);
    logger.debug("we have {} in our group so far", count);
}
List<Guest> guests = checkin.reserveRooms();]]></programlisting>
        </figure>
        <itemizedlist spacing="compact">
            <listitem><para>Multiple requests are issued to Stateful EJB</para></listitem>
            <listitem><para>Specific method(s) act on that state</para></listitem>
        </itemizedlist>
        
        <figure>
            <title></title>
<programlisting language=""><![CDATA[
]]></programlisting>
        </figure>
        <itemizedlist spacing="compact">
            <listitem><para></para></listitem>
            <listitem><para></para></listitem>
        </itemizedlist>
        
        <figure>
            <title></title>
<programlisting language=""><![CDATA[
]]></programlisting>
        </figure>
        <itemizedlist spacing="compact">
            <listitem><para></para></listitem>
            <listitem><para></para></listitem>
        </itemizedlist>
        
        <figure>
            <title></title>
<programlisting language=""><![CDATA[
]]></programlisting>
        </figure>
        <itemizedlist spacing="compact">
            <listitem><para></para></listitem>
            <listitem><para></para></listitem>
        </itemizedlist>
    </section>

    <section id="ejb-jpa-propagation-rollback">
        <title>Transaction Rollbacks</title>
        <itemizedlist spacing="compact">
            <listitem><para></para></listitem>
            <listitem><para></para></listitem>
            <listitem><para></para></listitem>
        </itemizedlist>

        <section id="ejb-jpa-propagation-rollback-stateless">
            <title>Stateless Transaction Rollback</title>
            <itemizedlist spacing="compact">
                <listitem><para></para></listitem>
                <listitem><para></para></listitem>
                <listitem><para></para></listitem>
            </itemizedlist>
        
            <figure>
                <title></title>
<programlisting language=""><![CDATA[
]]></programlisting>
        </figure>
            <itemizedlist spacing="compact">
                <listitem><para></para></listitem>
                <listitem><para></para></listitem>
            </itemizedlist>
            
            <figure>
                <title></title>
<programlisting language=""><![CDATA[
]]></programlisting>
            </figure>
            <itemizedlist spacing="compact">
                <listitem><para></para></listitem>
                <listitem><para></para></listitem>
            </itemizedlist>
        </section>

        <section id="ejb-jpa-propagation-rollback-stateful">
            <title>Stateful Transaction Rollback</title>
            <itemizedlist spacing="compact">
                <listitem><para></para></listitem>
                <listitem><para></para></listitem>
                <listitem><para></para></listitem>
            </itemizedlist>
        
            <figure>
                <title></title>
<programlisting language=""><![CDATA[
]]></programlisting>
        </figure>
            <itemizedlist spacing="compact">
                <listitem><para></para></listitem>
                <listitem><para></para></listitem>
            </itemizedlist>
            
            <figure>
                <title></title>
<programlisting language=""><![CDATA[
]]></programlisting>
            </figure>
            <itemizedlist spacing="compact">
                <listitem><para></para></listitem>
                <listitem><para></para></listitem>
            </itemizedlist>
        </section>
    </section>

    <section id="ejb-jpa-propagation-locking">
        <title>Pessamistic Locking</title>
        <itemizedlist spacing="compact">
            <listitem><para></para></listitem>
            <listitem><para></para></listitem>
            <listitem><para></para></listitem>
        </itemizedlist>
        
        <figure>
            <title></title>
<programlisting language=""><![CDATA[
]]></programlisting>
        </figure>
        <itemizedlist spacing="compact">
            <listitem><para></para></listitem>
            <listitem><para></para></listitem>
        </itemizedlist>
        
        <figure>
            <title></title>
<programlisting language=""><![CDATA[
]]></programlisting>
        </figure>
        <itemizedlist spacing="compact">
            <listitem><para></para></listitem>
            <listitem><para></para></listitem>
        </itemizedlist>
    </section>

    <section id="ejb-jpa-propagation-summary">
       <title>Summary</title>
        <itemizedlist spacing="compact">
            <listitem><para></para></listitem>
            <listitem><para></para></listitem>
            <listitem><para></para></listitem>
        </itemizedlist>
    </section>    
</chapter>
  
