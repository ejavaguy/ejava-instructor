<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
   "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd"  [ ]>

<chapter id="jpa-inheritance-joined">
    <title>Inheritance Strategy:Join</title>
        
        
    <section id="jpa-inheritance-joined-overview">
        <title>Join Strategy Overview</title>
        <figure>
            <title>Joined Inheritance Strategy</title>
            <graphic scale="100" fileref="images/jpa-inheritance-joined.png"/>
        </figure>

        <itemizedlist spacing="compact">
            <listitem><para>Advantages</para>
                <itemizedlist spacing="compact">
                    <listitem><para>Can be normalized</para></listitem>
                    <listitem><para>Permits constraints to be defined</para></listitem>
                </itemizedlist>
            </listitem>
            <listitem><para>Disadvantages</para>
                <itemizedlist spacing="compact">
                    <listitem><para>Requires access to multiple tables when using (insert, select, update, and delete) an entity</para></listitem>
                </itemizedlist>
            </listitem>
            <listitem><para>More suitable for sub-classes that...</para>
                <itemizedlist spacing="compact">
                    <listitem><para>Have many unique properties</para></listitem>
                    <listitem><para>Require database constraints</para></listitem>
                    <listitem><para>Are queried for across sibling sub-types</para></listitem>
                </itemizedlist>
            </listitem>
        </itemizedlist>
    </section>

    <section id="jpa-inheritance-joined-schema">
        <title>Join Example Database Schema</title>

        <figure>
            <title>Join Example Database Schema</title>
<programlisting language=""><![CDATA[create table ORMINH_PERSON (
    id bigint generated by default as identity,
    firstName varchar(255),
    lastName varchar(255),
    primary key (id)
)
create table ORMINH_EMPLOYEE (
    hireDate date,
    payrate double not null,
    id bigint not null,
    primary key (id)
)
alter table ORMINH_CUSTOMER 
    add constraint FK6D5464A42122B7AC 
    foreign key (id) 
    references ORMINH_PERSON
alter table ORMINH_EMPLOYEE 
    add constraint FK9055CB742122B7AC 
    foreign key (id) 
    references ORMINH_PERSON]]></programlisting>                        
        </figure>
        <itemizedlist spacing="compact">
            <listitem><para>Table for each entity class is created</para></listitem>
            <listitem><para>Each table has a primary key</para></listitem>
            <listitem><para>Sub-class tables use a primary key join with parent class</para></listitem>
        </itemizedlist>
    </section>

    <section id="jpa-inheritance-joined-mapping">
        <title>Join Example Java Mapping</title>

        <figure>
            <title>Join Example Java Mapping (Parent Class)</title>
<programlisting language="java"><![CDATA[@Entity @Table(name="ORMINH_PERSON")
@Inheritance(strategy=InheritanceType.JOINED)
public class Person {
    @Id @GeneratedValue
    private long id;
    private String firstName;
    private String lastName;]]></programlisting>
        </figure>
        <itemizedlist spacing="compact">
            <listitem><para>Parent defines default mapping for all derived types</para></listitem>
            <listitem><para>Parent entity class table also defined</para></listitem>
        </itemizedlist>

        <figure>
            <title>Join Example Java Mapping (Subclasses)</title>
<programlisting language="java"><![CDATA[@Entity 
@Table(name="ORMINH_CUSTOMER") //joined with Person table to form Customer
public class Customer extends Person {
    public enum Rating { GOLD, SILVER, BRONZE }
    @Enumerated(EnumType.STRING)
    private Rating rating;]]></programlisting>                        

<programlisting language="java"><![CDATA[@Entity 
@Table(name="ORMINH_EMPLOYEE") //joined with Person table to form Employee
public class Employee extends Person {
    private double payrate;
    @Temporal(TemporalType.DATE)
    private Date hireDate;]]></programlisting>                        

        </figure>
        <itemizedlist spacing="compact">
            <listitem><para>Sub-classes define their entity-specific tables</para></listitem>
        </itemizedlist>
    </section>

    <section id="jpa-inheritance-joined-usage">
        <title>Join Example Usage (Persist)</title>
        <figure>
            <title>Join Example Usage</title>
<programlisting language="java"><![CDATA[ejava.examples.orm.inheritance.annotated.Employee employee = new Employee();
employee.setFirstName("john");
employee.setLastName("doe");
employee.setHireDate(new Date());
employee.setPayrate(10.00);
em.persist(employee);

ejava.examples.orm.inheritance.annotated.Customer customer = new Customer();
customer.setFirstName("jane");
customer.setLastName("johnson");
customer.setRating(Customer.Rating.SILVER);
em.persist(customer);]]></programlisting>                        

<programlisting language=""><![CDATA[Hibernate:
    insert into ORMINH_PERSON (id, firstName, lastName) 
    values (null, ?, ?)
Hibernate:
    insert into ORMINH_EMPLOYEE (hireDate, payrate, id) 
    values (?, ?, ?)
Hibernate:
    insert into ORMINH_PERSON (id, firstName, lastName) 
    values (null, ?, ?)
Hibernate:
    insert into ORMINH_CUSTOMER (rating, id) 
    values (?, ?)]]></programlisting>                        
        </figure>
        <itemizedlist spacing="compact">
            <listitem><para>Each persist() must insert into concrete class table and parent class table(s)</para></listitem>
        </itemizedlist>


        <figure>
            <title>Join Example Usage (Get Entities)</title>
<programlisting language="java"><![CDATA[List<Person> people = em.createQuery("select p from Person p", Person.class).getResultList();
assertTrue("unexpected number of people:" + people.size(),
        people.size() == 2);
for(Person p: people) {
    log.info("person found:" + p);
}]]></programlisting>

<programlisting language=""><![CDATA[select
    person0_.id as id1_8_,
    person0_.firstName as firstNam2_8_,
    person0_.lastName as lastName3_8_,
    person0_1_.hireDate as hireDate1_6_,
    person0_1_.payrate as payrate2_6_,
    person0_2_.rating as rating1_5_,
    case 
        when person0_1_.id is not null then 1 
        when person0_2_.id is not null then 2 
        when person0_.id is not null then 0 
    end as clazz_ 
from ORMINH_PERSON person0_ 
left outer join ORMINH_EMPLOYEE person0_1_ 
        on person0_.id=person0_1_.id 
left outer join ORMINH_CUSTOMER person0_2_ 
        on person0_.id=person0_2_.id
-person found:Employee, id=1, firstName=john, lastName=doe, payrate=10.0
-person found:Customer, id=2, firstName=jane, lastName=johnson, rating=SILVER]]></programlisting>                        
        </figure>
        <itemizedlist spacing="compact">
            <listitem><para>Parent class table joined with each sub-class table during query of parent type</para></listitem>
        </itemizedlist>

        <figure>
            <title>Join Example Usage (Verify DB Schema)</title>
<programlisting language="java"><![CDATA[int rows = em.createNativeQuery(
        "select ID, FIRSTNAME, LASTNAME from ORMINH_PERSON")
        .getResultList().size();
assertEquals("unexpected number of person rows:" + rows, 2, rows);
rows = em.createNativeQuery(
        "select ID, RATING from ORMINH_CUSTOMER")
        .getResultList().size();
assertEquals("unexpected number of customer rows:" + rows, 1, rows);
rows = em.createNativeQuery(
        "select ID, PAYRATE, HIREDATE from ORMINH_EMPLOYEE")
        .getResultList().size();
assertEquals("unexpected number of employee rows:" + rows, 1, rows);]]></programlisting>                        

<programlisting language=""><![CDATA[select * from ORMINH_PERSON
ID FIRSTNAME LASTNAME
-- --------- --------
1  john      doe
2  jane      johnson

select * from ORMINH_EMPLOYEE
ID HIREDATE   PAYRATE
-- ---------- -------
1  2006-10-08 10.0

select * from ORMINH_CUSTOMER
ID RATING
-- ------
2  SILVER]]></programlisting>                        
        </figure>
        <itemizedlist spacing="compact">
            <listitem><para>Entities span multiple tables</para></listitem>
        </itemizedlist>
    </section>

        
    <section id="jpa-inheritance-joined-summary">
        <title>Summary</title>
        <itemizedlist spacing="compact">
            <listitem><para>Each class is mapped to a separate table</para></listitem>
            <listitem><para>Tables are joined together (by primary key join default)</para></listitem>
            <listitem><para>Very similar to @OneToOne relation using @PrimaryKeyJoinColumn</para></listitem>
        </itemizedlist>
    </section>
</chapter>
  
