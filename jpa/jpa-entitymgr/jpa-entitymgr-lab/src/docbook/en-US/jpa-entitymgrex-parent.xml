<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
   "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd"  [ ]>

<chapter id="jpa-entitymgrex-parent">
    <title>Create JPA Parent POM</title>
    <para>
        Since you will likely have many JPA modules in your enterprise application,
        lets take a moment to break the current module into a parent and child before
        you quit. That way you can better visualize which parts are specific to the 
        child module and which are reusable from a common parent.
    </para>
        
    <orderedlist>
        <listitem><para>
            Create a sibling module called ../jpa-parent
            </para>
<programlisting language="xml"><![CDATA[$ mkdir ../jpa-parent]]></programlisting>
        </listitem>

        <listitem><para>
            Add the module definition (../jpa-parent/pom.xml)
            </para>
<programlisting language="xml"><![CDATA[<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>myorg.jpa</groupId>
    <artifactId>jpa-parent</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>pom</packaging>

    <name>JPA Parent POM</name>
    <description>
        This parent pom is intended to provide common and re-usable 
        definitions and constructs across JPA projects.
    </description>
</project>]]></programlisting>
        </listitem>

        <listitem><para>
            Add the following parent declaration to your existing module.
            The relativePath is only useful if you find yourself changing the
            parent pom on a frequent basis. Otherwise the parent module
            can be found in the localRepository once it has been installed.
            </para>
<programlisting language="xml"><![CDATA[    <parent>
        <groupId>myorg.jpa</groupId>
        <artifactId>jpa-parent</artifactId>
        <version>1.0-SNAPSHOT</version>
        <relativePath>../jpa-parent</relativePath>
    </parent>

    <groupId>myorg.jpa</groupId>
    <artifactId>entityMgrEx-child</artifactId>

    <name>Entity Manager Exercise</name>]]></programlisting>
        </listitem>

        <listitem><para>
            Verify your project still builds. This will verify your relativePath 
            is correct.
            </para>
<programlisting language=""><![CDATA[$mvn clean verify
...
[INFO] BUILD SUCCESS]]></programlisting>
        </listitem>

        <listitem><para>
            Move the following constructs from the entityMgrEx module to the 
            jpa-parent module. These represent the *passive* definitions that
            will not directly impact the child module until the child requests
            that feature. Your child module should still have the same build
            and test functionality except now it should look a little smaller.
            One could also make a case for moving some of the SQL/DDL script 
            execution definitions also to the parent -- which would make this
            module almost of trivial size.
            </para>
            <itemizedlist spacing="compact">
                <listitem><para>properties</para></listitem>
                <listitem><para>repositories</para></listitem>
                <listitem><para>dependencyManagement</para></listitem>
                <listitem><para>pluginManagement</para></listitem>
                <listitem><para>select profiles</para></listitem>
            </itemizedlist>
<programlisting language="xml"><![CDATA[<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>myorg.jpa</groupId>
    <artifactId>jpa-parent</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>pom</packaging>

    <name>JPA Parent POM</name>
    <description>
        This parent pom is intended to provide common and re-usable 
        definitions and constructs across JPA projects.
    </description>

   <!-- needed to resolve some hibernate dependencies -->
    <repositories>
        <repository>
            <id>jboss-nexus</id>
            <name>JBoss Nexus Repository</name>
            <url>https://repository.jboss.org/nexus/content/groups/public-jboss/</url>
        </repository>
    </repositories>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <java.source.version>1.8</java.source.version>
        <java.target.version>1.8</java.target.version>

        <jboss.host>localhost</jboss.host>
        <db.host>${jboss.host}</db.host>

        <maven-compiler-plugin.version>3.1</maven-compiler-plugin.version>
        <maven-jar-plugin.version>2.5</maven-jar-plugin.version>
        <maven-surefire-plugin.version>2.17</maven-surefire-plugin.version>
        <sql-maven-plugin.version>1.5</sql-maven-plugin.version>        

        <commons-logging.version>1.1.1</commons-logging.version>
        <h2db.version>1.3.168</h2db.version>
        <hibernate-jpa-2.1-api.version>1.0.0.Final</hibernate-jpa-2.1-api.version>
        <hibernate-entitymanager.version>4.3.4.Final</hibernate-entitymanager.version>
        <hibernate3-maven-plugin.version>3.0</hibernate3-maven-plugin.version>
        <hibernate3.version>3.6.10.Final</hibernate3.version>
        <junit.version>4.10</junit.version>
        <log4j.version>1.2.13</log4j.version>
        <slf4j.version>1.7.2</slf4j.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
              <groupId>commons-logging</groupId>
              <artifactId>commons-logging</artifactId>
              <version>${commons-logging.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate.javax.persistence</groupId>
                <artifactId>hibernate-jpa-2.1-api</artifactId>
                <version>${hibernate-jpa-2.1-api.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate-entitymanager</artifactId>
                <version>${hibernate-entitymanager.version}</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-log4j12</artifactId>
                <version>${slf4j.version}</version>
            </dependency>
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>${junit.version}</version>
            </dependency>
            <dependency>
              <groupId>log4j</groupId>
              <artifactId>log4j</artifactId>
              <version>${log4j.version}</version>
            </dependency>    
        </dependencies>
    </dependencyManagement>

    <build>
        <pluginManagement>
            <plugins>
                  <!-- make sure we are building java6 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven-compiler-plugin.version}</version>
                    <configuration>
                            <source>${java.source.version}</source>
                            <target>${java.target.version}</target>
                    </configuration>	                
                </plugin>      

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>${maven-jar-plugin.version}</version>
                </plugin>
          
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${maven-surefire-plugin.version}</version>
                    <configuration>
                        <argLine>${surefire.argLine}</argLine>
                    </configuration>
                </plugin>            

                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>hibernate3-maven-plugin</artifactId>
                    <version>${hibernate3-maven-plugin.version}</version>
                    <extensions>true</extensions>
                    <dependencies>
                        <dependency>
                            <groupId>org.hibernate</groupId>
                            <artifactId>hibernate-entitymanager</artifactId>
                            <version>${hibernate3.version}</version>
                        </dependency>
                    </dependencies>
                    <executions>
                        <execution>
                            <id>generate-drop-ddl</id>
                            <phase>process-test-classes</phase>
                            <goals>
                                <goal>run</goal>
                            </goals>
                            <configuration>
                                <hibernatetool>
                                    <hbm2ddl export="false" create="false" drop="true" format="true" 
                                        outputfilename="${project.artifactId}-dropJPA.ddl"/>
                                </hibernatetool>
                            </configuration>
                        </execution>
                        <execution>
                            <id>generate-create-ddl</id>
                            <phase>process-test-classes</phase>
                            <goals>
                                <goal>run</goal>
                            </goals>
                            <configuration>
                                <hibernatetool>
                                    <hbm2ddl export="false" create="true" drop="false" format="true" 
                                        outputfilename="${project.artifactId}-createJPA.ddl"/>
                                </hibernatetool>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>

                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>sql-maven-plugin</artifactId>        
                    <version>${sql-maven-plugin.version}</version>        
                
                    <dependencies>
                        <dependency>
                            <groupId>com.h2database</groupId>
                            <artifactId>h2</artifactId>
                            <version>${h2db.version}</version>
                        </dependency>
                    </dependencies>
                
                    <configuration>
                        <username>${jdbc.user}</username>
                        <password>${jdbc.password}</password>
                        <driver>${jdbc.driver}</driver>
                        <url>${jdbc.url}</url>          
                    </configuration>
                </plugin>          

            </plugins>    
        </pluginManagement>
    </build>

    <profiles>
        <profile> <!-- H2 server-based DB -->
            <id>h2srv</id>
            <properties>
                  <jdbc.driver>org.h2.Driver</jdbc.driver>
                  <jdbc.url>jdbc:h2:tcp://${db.host}:9092/h2db/ejava</jdbc.url>
                  <jdbc.user>sa</jdbc.user>
                  <jdbc.password/>
                  <hibernate.dialect>org.hibernate.dialect.H2Dialect</hibernate.dialect>
            </properties>
            <dependencies>
                <dependency>
                    <groupId>com.h2database</groupId>
                    <artifactId>h2</artifactId>
                    <version>${h2db.version}</version>
                    <scope>test</scope>
                </dependency>
            </dependencies>
        </profile>

        <profile> <!-- H2 file-based DB -->
            <id>h2db</id>
            <activation>
                <property> 
                    <name>!jdbcdb</name>
                </property>
            </activation>
            <properties>
                  <jdbc.driver>org.h2.Driver</jdbc.driver>
                  <jdbc.url>jdbc:h2:${basedir}/target/h2db/ejava</jdbc.url>
                  <jdbc.user>sa</jdbc.user>
                  <jdbc.password/>
                  <hibernate.dialect>org.hibernate.dialect.H2Dialect</hibernate.dialect>
            </properties>
            <dependencies>
                <dependency>
                    <groupId>com.h2database</groupId>
                    <artifactId>h2</artifactId>
                    <version>${h2db.version}</version>
                    <scope>test</scope>
                </dependency>
            </dependencies>
        </profile>

        <!--  tell Eclipse what to do with some of the plugins -->
        <profile>
          <id>m2e</id>
          <activation>
            <property>
              <name>m2e.version</name>
            </property>
          </activation>
          <build>
            <pluginManagement>
                <plugins>
                    <plugin>
                      <groupId>org.eclipse.m2e</groupId>
                      <artifactId>lifecycle-mapping</artifactId>
                      <version>1.0.0</version>
                      <configuration>
                        <lifecycleMappingMetadata>
                          <pluginExecutions>
                            
                            <pluginExecution>
                              <pluginExecutionFilter>
                                <groupId>org.codehaus.mojo</groupId>
                                <artifactId>hibernate3-maven-plugin</artifactId>
                                <versionRange>[3.0,)</versionRange>
                                <goals>
                                  <goal>run</goal>
                                </goals>
                              </pluginExecutionFilter>
                              <action>
                                <ignore/>
                              </action>
                            </pluginExecution>

                            <pluginExecution>
                              <pluginExecutionFilter>
                                <groupId>org.codehaus.mojo</groupId>
                                <artifactId>sql-maven-plugin</artifactId>
                                <versionRange>[1.0.0,)</versionRange>
                                <goals>
                                  <goal>execute</goal>
                                </goals>
                              </pluginExecutionFilter>
                              <action>
                                <ignore />
                              </action>
                            </pluginExecution>

                          </pluginExecutions>
                        </lifecycleMappingMetadata>
                      </configuration>
                    </plugin>

                </plugins>
            </pluginManagement>
           </build>
        </profile>
    </profiles>
</project>
]]></programlisting>
        </listitem>

        <listitem><para>
            Leave the following the child project. This is a collection of *active*
            project constructs.
            </para>
            <itemizedlist spacing="compact">
                <listitem><para>plugins</para></listitem>
                <listitem><para>dependencies</para></listitem>
                <listitem><para>module-specific properties</para></listitem>
                <listitem><para>profiles that declare plugins and dependencies</para></listitem>
            </itemizedlist>
<programlisting language="xml"><![CDATA[ <project
    xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>myorg.jpa</groupId>
        <artifactId>jpa-parent</artifactId>
        <version>1.0-SNAPSHOT</version>
        <relativePath>../jpa-parent</relativePath>
    </parent>

    <groupId>myorg.jpa</groupId>
    <artifactId>entityMgrEx-child</artifactId>

    <name>Entity Manager Exercise</name>
    <build>
        <!-- filtering will replace URLs, credentials, etc in the 
             files copied to the target directory and used during testing.
            -->
        <testResources>
            <testResource>
                <directory>src/test/resources</directory>
                <filtering>true</filtering>
            </testResource>
        </testResources>

        <plugins>
            <plugin>
                <artifactId>hibernate3-maven-plugin</artifactId>
                <groupId>org.codehaus.mojo</groupId>
                <configuration>
                    <hibernatetool destdir="target/classes/ddl">
                        <classpath>
                            <path location="${project.build.directory}/classes" />
                            <path location="${project.build.directory}/test-classes" />
                        </classpath>
                        <jpaconfiguration persistenceunit="entityMgrEx"
                            propertyfile="${basedir}/target/test-classes/hibernate.properties" />
                    </hibernatetool>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <dependencies>
        <dependency>
          <groupId>commons-logging</groupId>
          <artifactId>commons-logging</artifactId>
          <scope>compile</scope>
        </dependency>
    
        <dependency>
            <groupId>org.hibernate.javax.persistence</groupId>
            <artifactId>hibernate-jpa-2.1-api</artifactId>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-entitymanager</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>log4j</groupId>
          <artifactId>log4j</artifactId>
          <scope>test</scope>
        </dependency>    
    </dependencies>

    <profiles>
        <profile>
            <id>testing</id>
            <activation>
                <property>
                    <name>!skipTests</name>
                </property>
            </activation>
      
            <build>
                <plugins>
                    <plugin>
                        <!-- runs schema against the DB -->
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>sql-maven-plugin</artifactId>        

                        <executions>

                            <!-- place execution elements here  -->
                            <execution>
                                <id>drop-db-before-test</id>
                                <phase>process-test-classes</phase>
                                <goals>
                                    <goal>execute</goal>
                                </goals>
                                <configuration>
                                    <autocommit>true</autocommit>
                                    <fileset>
                                        <basedir>${basedir}/src</basedir>
                                        <includes>
                                            <include>main/resources/ddl/**/*drop*.ddl</include>
                                        </includes>
                                    </fileset>
                                    <onError>continue</onError>
                                </configuration>
                            </execution>

                            <execution>
                                <id>create-db-before-test</id>
                                <phase>process-test-classes</phase>
                                <goals>
                                    <goal>execute</goal>
                                </goals>
                                <configuration>
                                    <autocommit>true</autocommit>
                                    <fileset>
                                        <basedir>${basedir}/src</basedir>
                                        <includes>
                                            <include>main/resources/ddl/**/*create*.ddl</include>

                                        </includes>
                                    </fileset>
                                    <print>true</print>
                                </configuration>
                            </execution>

                            <execution>
                                <id>populate-db-before-test</id>
                                <phase>process-test-classes</phase>
                                <goals>
                                    <goal>execute</goal>
                                </goals>
                                <configuration>
                                    <autocommit>true</autocommit>
                                    <fileset>
                                        <basedir>${basedir}/src</basedir>
                                        <includes>
                                            <include>test/resources/ddl/**/*populate*.ddl</include>
                                        </includes>
                                    </fileset>
                                </configuration>
                            </execution>

                            <!--
                            <execution>
                                <id>drop-db-after-test</id>
                                <phase>test</phase>
                                <goals>
                                    <goal>execute</goal>
                                </goals>
                                <configuration>
                                    <autocommit>true</autocommit>
                                    <fileset>
                                        <basedir>${basedir}/src</basedir>
                                        <includes>
                                            <include>main/resources/ddl/**/*drop*.ddl</include>     
                                            </includes>
                                    </fileset>
                                </configuration>
                            </execution>
                            -->
                        </executions>
                    </plugin>          
                </plugins>          
            </build>          
        </profile>
    </profiles>
</project> 
]]></programlisting>
        </listitem>

        <listitem><para>
            Verify your project still builds. This will verify your relativePath 
            is correct.
            </para>
<programlisting language=""><![CDATA[$mvn clean verify
...
[INFO] BUILD SUCCESS]]></programlisting>
        </listitem>


        <listitem><para>
            Optionally change your jpa-parent dependency to the class examples
            base parent project.
            </para>
<programlisting language="xml"><![CDATA[
    <parent>
        <groupId>info.ejava.examples.build</groupId>
        <artifactId>dependencies</artifactId>
        <version>x.x.x-SNAPSHOT</version>
        <relativePath>build/dependencies/pom.xml</relativePath>
    </parent>
]]></programlisting>
            <note>
                <para>
                    Replace x.x.x-SNAPSHOT with the correct version for class.
                </para>
            </note>
        </listitem>
    </orderedlist>

    <note>
        <para>
            It is never a good idea to declare *active* POM constructs in a parent of a 
            multi-module project unless *ALL* child modules are of the same purpose. 
            Strive for parent Maven projects to define standards to follow without
            inserting unecessary dependencies or other constructs.
        </para>
    </note>

        
    <section id="jpa-entitymgrex-parent-summary">
       <title>Summary</title>
       <para>In this chapter you re-factored your module into a reusable jpa-parent
           module (that could be replaced by the class example) and child module. The
           child is then freed of defining version#s and other constructs that can be
           shared across several modules -- allowing smaller child POMs to be created 
           through templates that produce modules that extend the jpa-parent. Cool.
           You didn't want to do that again.
       </para>
       <para>
          You have now finished all chapters of the Maven and JPA/EntityManager
          exercise that was geared at getting you started developing modules that
          implement the data tier.
       </para>
    </section>    
</chapter>
  
