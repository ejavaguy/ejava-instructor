<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
   "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd"  [ ]>

<chapter id="jpa-queryex-setup">
    <title>JPA Entity Exercise Setup</title>
        
    <section id="jpa-queryex-maven">
        <title>Setup Maven Project</title>
        <para></para>
        
        <itemizedlist spacing="compact">
            <listitem><para>Add the following to your .m2/settings.xml file. This will allow you to 
                resolve the exercise archetype and set a default database for the exercise.</para>
<programlisting language=""><![CDATA[
    <profiles>
       <profile>
            <id>webdev-repositories</id>
            <repositories>
                <repository>
                    <id>webdev-baseline</id>
                    <name>webdev.apl.jhu.edu baseline</name>
                    <url>http://webdev.apl.jhu.edu/~jcs/maven2</url>
                </repository>
                <repository>
                    <id>webdev-snapshot</id>
                    <name>webdev.apl.jhu.edu SNAPSHOT</name>
                    <url>http://webdev.apl.jhu.edu/~jcs/maven2-snapshot</url>
                    <snapshots>
                        <enabled>true</enabled>
                        <updatePolicy>daily</updatePolicy>
                    </snapshots>
                </repository>
            </repositories>
            <pluginRepositories>
                <pluginRepository>
                    <id>webdev-plugins</id>
                    <name>ejava webdev repository</name>
                    <url>http://webdev.apl.jhu.edu/~jcs/maven2</url>
                </pluginRepository>
            </pluginRepositories>
        </profile>
    </profiles>
    <activeProfiles>
        <activeProfile>h2db</activeProfile>
        <!--
        <activeProfile>h2srv</activeProfile>
        -->
    </activeProfiles>
]]></programlisting>                        
            </listitem>
        
            <listitem><para>Use the ejava.jpa:jpa-queryex-archetype to setup a new Maven project for this exercise.
                Activate the webdev-repositories profile (-Pwebdev-repositories) so that you can resolve
                the archetype off the Internet.</para>
                <note>
                    <para>This archetype is specific to this exercise and is a different profile than what was 
                        used by the previous exercises.</para>
                </note>
 <programlisting language=""><![CDATA[
$ mvn archetype:generate -B \
-DarchetypeGroupId=ejava.jpa -DarchetypeArtifactId=jpa-queryex-archetype \
-DgroupId=myorg.queryex -DartifactId=queryEx \
-Pwebdev-repositories

...
[INFO] Generating project in Batch mode
[INFO] Archetype [ejava.jpa:jpa-queryex-archetype:3.0.2013.1-SNAPSHOT] found in catalog local
[INFO] ----------------------------------------------------------------------------
[INFO] Using following parameters for creating project from Archetype: jpa-queryex-archetype:3.0.2013.1-SNAPSHOT
[INFO] ----------------------------------------------------------------------------
[INFO] Parameter: groupId, Value: myorg.queryex
[INFO] Parameter: artifactId, Value: queryEx
[INFO] Parameter: version, Value: 1.0-SNAPSHOT
[INFO] Parameter: package, Value: myorg.queryex
[INFO] Parameter: packageInPathFormat, Value: myorg/queryex
[INFO] Parameter: version, Value: 1.0-SNAPSHOT
[INFO] Parameter: package, Value: myorg.queryex
[INFO] Parameter: groupId, Value: myorg.queryex
[INFO] Parameter: artifactId, Value: queryEx
[INFO] project created from Archetype in dir: /tmp/queryEx
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
]]></programlisting>
            </listitem>
            <listitem><para>You should now have an instantiated template for a JPA project</para>
<programlisting language=""><![CDATA[
queryEx/
|-- pom.xml
`-- src
    |-- main
    |   `-- java
    |       `-- myorg
    |           `-- queryex
    |               |-- Actor.java
    |               |-- Director.java
    |               |-- Movie.java
    |               |-- MoviePK.java
    |               |-- MovieRating.java
    |               |-- MovieRole.java
    |               |-- MovieRolePK.java
    |               `-- Person.java
    `-- test
        |-- java
        |   `-- myorg
        |       `-- queryex
        |           |-- BulkUpdateTest.java
        |           |-- MovieFactory.java
        |           |-- QueryBase.java
        |           |-- QueryLocksTest.java
        |           |-- QueryTest.java
        |           `-- SQLQueryTest.java
        `-- resources
            |-- hibernate.properties
            |-- log4j.xml
            `-- META-INF
                `-- persistence.xml
]]></programlisting>                        
            </listitem>        
            <listitem><para>Verify the instantiated template builds in your environment</para>
                <itemizedlist spacing="compact">
                    <listitem><para>Activate the h2db profile (and deactivate the h2srv profile) to use an embedded file as your database.
                        This option does not require a server but is harder to inspect database state in between tests.</para>
<programlisting language=""><![CDATA[
relationEx]$ mvn clean test -Ph2db -P\!h2srv
...
 -HHH000401: using driver [org.h2.Driver] at URL [jdbc:h2:/home/jcstaff/workspaces/ejava-javaee/git/jpa/jpa-relation/relationEx/target/h2db/ejava]
...
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
]]></programlisting>                        
                    </listitem>

                    <listitem><para>Start your database server</para>
<programlisting language=""><![CDATA[
$ java -jar M2_REPO/com/h2database/h2/1.3.168/h2-1.3.168.jar
]]></programlisting>                        
                    </listitem>

                    <listitem><para>Activate the h2srv profile (and deactivate the h2db profile) to use a running H2 database server.
                        This option provides more interaction with your database but does require the server to be running.</para>
<programlisting language=""><![CDATA[
relationEx]$ mvn clean test -P\!h2db -Ph2srv
...
 -HHH000401: using driver [org.h2.Driver] at URL [jdbc:h2:tcp://127.0.0.1:9092/h2db/ejava]
...
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
]]></programlisting>                        
                    </listitem>

                </itemizedlist>
            </listitem>
            <listitem><para>You may now import the instantiated template into Eclipse as an "Existing Maven Project"</para>
            </listitem>

        </itemizedlist>

    </section>
</chapter>
  
